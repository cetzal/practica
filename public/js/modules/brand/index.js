/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 6);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/modules/brand/index.js":
/*!*********************************************!*\
  !*** ./resources/js/modules/brand/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n(function () {\n  var brand_id = [];\n  $.ajaxSetup({\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    }\n  });\n  $(\"#range_date\").daterangepicker({\n    maxDate: moment().endOf(),\n    showApplyButton: false,\n    autoApply: true,\n    showInputs: false,\n    locale: {\n      format: 'DD/MM/YYYY'\n    },\n    todayHighlight: true,\n    autoUpdateInput: false\n  });\n  $('input[name=\"range_date\"]').on('apply.daterangepicker', function (ev, picker) {\n    $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY'));\n  });\n  $('input[name=\"range_date\"]').on('cancel.daterangepicker', function (ev, picker) {\n    $(this).val('');\n  });\n  brand_ids = [];\n  //Eliminar todas las marcas\n\n  $(\"#select_all\").on(\"change\", function () {\n    if ($(this).is(':checked')) {\n      $(\"tbody input[type='checkbox']\").prop('checked', true);\n    } else {\n      $(\"tbody input[type='checkbox']\").prop('checked', false);\n    }\n  });\n  $('.show_form_search').on('click', function (e) {\n    e.preventDefault();\n    $('.form_search').toggleClass('form_search_active');\n  });\n  $('.close_form').on('click', function (e) {\n    $('.form_search').removeClass('form_search_active');\n  });\n  var table = $('#brand-table').DataTable({\n    responsive: false,\n    autoWidth: false,\n    serverSide: true,\n    \"searching\": false,\n    \"bProcessing\": true,\n    \"ajax\": {\n      \"url\": \"api/brand\",\n      \"data\": function data(d) {\n        var frm_data = $('form#from_brand_search').serializeArray();\n        // return frm_data;\n        $.each(frm_data, function (key, val) {\n          d[val.name] = val.value;\n        });\n      }\n    },\n    \"order\": [],\n    'language': {\n      'lengthMenu': '_MENU_',\n      \"info\": ' _START_ - _END_ (_TOTAL_)</small>',\n      \"search\": '',\n      'paginate': {\n        'previous': '<i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>',\n        'next': '<i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>'\n      }\n    },\n    // 'columns': [\n    //     { \n    //         data: \"\", \"render\": function (data, type, full, meta) {\n    //             return data = '<div class=\"checkbox\"><input type=\"checkbox\" class=\"dt-checkboxes\"><label></label></div>';\n    //         }\n    //     },\n    //     { data: 'name' },\n    //     { data: 'description' },\n    //     { data: 'accion' , \"render\": function (data, type, full, meta) {\n\n    //         let $html =  '<a class=\"btn bg-success m-1 update\" data-id=\"'+data+'\"><i class=\"icon-floppy-disk\"></i> Update</a>';\n    //             $html +=  '<a class=\"btn bg-danger m-1 remove\" data-id=\"'+data+'\"><i class=\"icon-trash\"></i> Delete</a>';\n    //             $html +=  '<a class=\"btn bg-grey m-1 reset\" data-id=\"'+data+'\"><i class=\"icon-reset\"></i> Reset</a>';\n    //             return $html;\n    //         }\n    //     },\n    // ],\n    'createdRow': function createdRow(row, data, dataIndex) {\n      $(row).attr('data-branch-id', data['id']);\n    },\n    'columnDefs': [{\n      \"orderable\": false,\n      'targets': [0]\n    }, {\n      'render': function render(data, type, row, meta) {\n        data = '<div class=\"checkbox\"><input type=\"checkbox\" class=\"dt-checkboxes\"><label></label></div>';\n        return data;\n      },\n      'targets': [0],\n      'checkboxes': {\n        'selectRow': true,\n        'selectAllRender': '<div class=\"checkbox\"><input type=\"checkbox\" class=\"dt-checkboxes\"><label></label></div>'\n      }\n    }, {\n      'render': function render(data, type, row, meta) {\n        return row.name;\n      },\n      'targets': [1]\n    }, {\n      'width': '100px',\n      'render': function render(data, type, row, meta) {\n        var html = '<p class=\"text_ellipsis\" style=\"width:250px;\">' + row.description + '</p>';\n        return html;\n      },\n      'targets': [2]\n    }, {\n      'render': function render(data, type, row, meta) {\n        is_active = row.is_active == 1 ? 'Activo' : 'Desactivado';\n        class_text = \"text-success\";\n        if (row.is_active == 0) {\n          class_text = \"text-warning\";\n        }\n        data = '<span class=\"' + class_text + '\">' + is_active + '</span>';\n        return data;\n      },\n      'targets': [3]\n    }, {\n      'render': function render(data, type, row, meta) {\n        return row.created_by;\n      },\n      'targets': [4]\n    }, {\n      'render': function render(data, type, row, meta) {\n        if (row.created_at == null) {\n          return '';\n        }\n        return moment(row.created_at).format('DD/MM/YYYY HH:mm:ss');\n      },\n      'targets': [5]\n    }, {\n      'render': function render(data, type, row, meta) {\n        if (row.updated_at == null) {\n          return '';\n        }\n        return moment(row.updated_at).format('DD/MM/YYYY HH:mm:ss');\n      },\n      'targets': [6]\n    }, {\n      'render': function render(data, type, row, meta) {\n        // let $html =  '<button type=\"button\" class=\"open-EditbrandDialog btn bg-success\" data-id=\"'+row.id+'\" data-bs-toggle=\"modal\" data-bs-target=\"#editModal\"><i class=\"fa fa-edit\" aria-hidden=\"true\"></button>';\n        var html = '<a href=\"#\" class=\"btn bg-success btn-sm open-EditbrandDialog\" data-id=\"' + row.id + '\"  data-bs-toggle=\"modal\" data-bs-target=\"#editModal\"><i class=\"fa fa-edit\" aria-hidden=\"true\"></i></a>';\n        html += '<a class=\"btn bg-danger m-1 remove btn-sm\" data-id=\"' + row.id + '\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></a>';\n        if (row.is_active == 1) {\n          html += '<a class=\"btn m-1 desactivar btn-sm\" data-id=\"' + row.id + '\"><i class=\"fa fa-toggle-on\" aria-hidden=\"true\"></i></a>';\n        } else {\n          html += '<a class=\"btn m-1 activar btn-sm\" data-id=\"' + row.id + '\"><i class=\"fa fa-toggle-off\" aria-hidden=\"true\"></i></a>';\n        }\n        html += '<a href=\"#\" class=\"btn bg-success btn-sm redirect-record-log\" data-record-id=\"' + row.id + '\" data-record-name=\"' + row.name + '\"><i class=\"fa fa-eye\" aria-hidden=\"true\"></i></a>';\n\n        // let html =  '<a href=\"'+url_edit+'\" class=\"btn bg-success btn-sm open-EditbrandDialog\" data-id=\"'+row.id+'\"><i class=\"fa fa-edit\" aria-hidden=\"true\"></i></a>';\n        // let html =  '<a href=\"'+url_edit+'\" class=\"btn bg-success btn-sm \" data-id=\"'+row.id+'\"><i class=\"fa fa-edit\" aria-hidden=\"true\"></i></a>';\n        return html;\n      },\n      'targets': [7]\n    }, {\n      targets: [1],\n      className: \"text-center\"\n    }, {\n      targets: [0, 1, 2, 3],\n      searchable: false\n    }],\n    // 'select': { style: 'multi',  selector: 'td:first-child'},\n    'lengthMenu': [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n  });\n  $(\".delete_all\").on('click', function (e) {\n    e.preventDefault();\n    brand_ids = [];\n    verific_checks(0);\n    if (brand_ids.length) {\n      $.ajax({\n        type: 'PUT',\n        url: 'api/brand/all/deletebyselection',\n        data: {\n          brandIdArray: brand_ids\n        },\n        success: function success(data) {\n          console.log('data', data.messages);\n          var messsage = 'se elimino todo las marcas selecionados';\n          if (_typeof(data.messages) != undefined) {\n            messsage = data.messages;\n          }\n          $.confirm({\n            title: 'Eliminar marcas',\n            content: messsage,\n            buttons: {\n              ok: function ok() {\n                table.ajax.reload();\n                $(\"tbody input[type='checkbox']\").prop('checked', false);\n              }\n            }\n          });\n        }\n      });\n    } else {\n      $.alert({\n        title: 'Eliminar marcas',\n        content: 'Seleccione las marcas que deseas eliminar'\n      });\n    }\n  });\n\n  //Activar todas las marcas seleccionas\n  $(\".active_all\").on('click', function (e) {\n    e.preventDefault();\n    brand_ids = [];\n    verific_checks(0);\n    if (brand_ids.length) {\n      $.ajax({\n        type: 'PUT',\n        url: 'api/brand/all/activatebyselection',\n        data: {\n          brandIdArray: brand_ids\n        },\n        success: function success(data) {\n          $.confirm({\n            title: 'Activar marcas',\n            content: 'Se activo todo las marcas selecionados ',\n            buttons: {\n              ok: function ok() {\n                table.ajax.reload();\n                $(\"tbody input[type='checkbox']\").prop('checked', false);\n              }\n            }\n          });\n        }\n      });\n    } else {\n      $.alert({\n        title: 'Activar marcas',\n        content: 'Seleccione los marcas que deseas activar'\n      });\n    }\n  });\n\n  // Desactivas todas las marcas seleccionadas\n  $(\".desactive_all\").on('click', function (e) {\n    e.preventDefault();\n    brand_ids = [];\n    verific_checks(0);\n    if (brand_ids.length) {\n      $.ajax({\n        type: 'PUT',\n        url: 'api/brand/all/deactivatebyselection',\n        data: {\n          brandIdArray: brand_ids\n        },\n        success: function success(data) {\n          $.confirm({\n            title: 'Desactivar marcas',\n            content: 'Se desactivo todas los marcas selecionados ',\n            buttons: {\n              ok: function ok() {\n                table.ajax.reload();\n                $(\"tbody input[type='checkbox']\").prop('checked', false);\n                // $('#brand-table').DataTable().ajax().reload();\n              }\n              // cancel: function () {\n              //     $.alert('Canceled!');\n              // },\n              // somethingElse: {\n              //     text: 'Something else',\n              //     btnClass: 'btn-blue',\n              //     keys: ['enter', 'shift'],\n              //     action: function(){\n              //         $.alert('Something else?');\n              //     }\n              // }\n            }\n          });\n        }\n      });\n    } else {\n      $.alert({\n        title: 'Desactivar marcas',\n        content: 'Seleccione lass marcas que deseas desactivar'\n      });\n    }\n  });\n  var verific_checks = function verific_checks(num) {\n    $(':checkbox:checked').each(function (i) {\n      var brand_data = $(this).closest('tr').data('branch-id');\n      if (typeof brand_data != \"undefined\") {\n        brand_ids[i - 1] = brand_data;\n      }\n    });\n  };\n  $(\"#from_brand_search\").on(\"submit\", function (event) {\n    event.preventDefault();\n    var date_range = $('#range_date').val();\n    var type_fecha = $('.brand-date-select').val();\n    if (type_fecha == '' && date_range !== '') {\n      $.alert({\n        title: 'Filtra datos',\n        content: 'Selecione un tipo de fecha a consultar'\n      });\n      return '';\n    }\n    if (date_range == '' && type_fecha !== '') {\n      $.alert({\n        title: 'Filtra datos',\n        content: 'Selecione el rango de fecha'\n      });\n      return '';\n    }\n    table.ajax.reload();\n  });\n  $('.clear_form').on('click', function (e) {\n    $('#from_brand_search')[0].reset();\n    table.ajax.reload();\n  });\n  $('#brand-table').on('click', '.open-EditbrandDialog ', function () {\n    $('#update_brand')[0].reset();\n    load_combobox(\"#suppliersup_id\");\n    var url = \"api/brand/\";\n    var id = $(this).data('id').toString();\n    url = url.concat(id).concat(\"/edit\");\n    $.get(url, function (data) {\n      $(\"input[name='name']\").val(data['name']);\n      $(\"textarea[name='description']\").val(data['description']);\n      $(\"input[name='brand_id']\").val(data['id']);\n    });\n  });\n  $('#brand-table').on('click', '.redirect-record-log', function () {\n    var record_id = $(this).data('record-id').toString();\n    var record_name = $(this).data('record-name').toString();\n    window.location.href = window.location.origin + '/log-module/' + record_id + '/record?record_name=' + record_name;\n  });\n  $('#brand-table').on('click', '.remove ', function () {\n    var url = \"api/brand/\";\n    var id = $(this).data('id').toString();\n    url = url.concat(id).concat(\"/delete\");\n    var Jquery = $.Jquery;\n    $.confirm({\n      title: 'Delete brand?',\n      content: 'Realmente quieres eliminar la marca',\n      // autoClose: 'cancelAction|8000',\n      buttons: {\n        deleteUser: {\n          text: 'delete brands',\n          action: function action() {\n            $.ajax({\n              url: url,\n              type: 'DELETE',\n              success: function success(response) {\n                $.confirm({\n                  title: response.status,\n                  content: response.message,\n                  buttons: {\n                    ok: function ok() {\n                      table.ajax.reload();\n                    }\n                  }\n                });\n                // table.ajax.reload();\n              }\n            });\n          }\n        },\n        cancelAction: function cancelAction() {\n          // $.alert('action is canceled');\n        }\n      }\n    });\n  });\n  $('#brand-table').on('click', '.desactivar ', function () {\n    var url = \"api/brand/\";\n    var id = $(this).data('id').toString();\n    url = url.concat(id).concat(\"/deactivate\");\n    var Jquery = $.Jquery;\n    $.confirm({\n      title: 'Descativar marca?',\n      content: 'Realmente quieres desactivar la marca',\n      // autoClose: 'cancelAction|8000',\n      buttons: {\n        deleteUser: {\n          text: 'desactivar brands',\n          action: function action() {\n            $.ajax({\n              url: url,\n              type: 'PUT',\n              success: function success(response) {\n                $.alert({\n                  title: response.status,\n                  content: response.message\n                });\n                table.ajax.reload();\n              }\n            });\n          }\n        },\n        cancelAction: function cancelAction() {\n          // $.alert('action is canceled');\n        }\n      }\n    });\n  });\n  $('#brand-table').on('click', '.activar ', function () {\n    var url = \"api/brand/\";\n    var id = $(this).data('id').toString();\n    url = url.concat(id).concat(\"/activate\");\n    var Jquery = $.Jquery;\n    $.confirm({\n      title: 'Activar brand?',\n      content: 'Realmente quieres activar la marca',\n      // autoClose: 'cancelAction|8000',\n      buttons: {\n        deleteUser: {\n          text: 'activar brands',\n          action: function action() {\n            $.ajax({\n              url: url,\n              type: 'PUT',\n              success: function success(response) {\n                $.alert({\n                  title: response.status,\n                  content: response.message\n                });\n                table.ajax.reload();\n              }\n            });\n          }\n        },\n        cancelAction: function cancelAction() {\n          // $.alert('action is canceled');\n        }\n      }\n    });\n  });\n\n  //Cerrar los modales de update or create\n  $('.bt-close-modal').on('click', function (e) {\n    $(\"input[name='name']\").val('');\n    $(\"textarea[name='description']\").val('');\n    $('form#new_brand')[0].reset();\n    $('form#update_brand')[0].reset();\n    $(\"form#new_brand\").find(\"#btn-password\").removeClass('is-invalid');\n    $(\"form#new_brand\").find(\"#btn-password\").attr('aria-invalid', false);\n    $(\"form#update_brand\").find(\"#btn-password-up\").removeClass('is-invalid');\n    $(\"form#update_brand\").find(\"#btn-password-up\").attr('aria-invalid', false);\n  });\n  $('.btn-close-modal').on('click', function (e) {\n    $(\"input[name='name']\").val('');\n    $(\"textarea[name='description']\").val('');\n    $('form#new_brand')[0].reset();\n    $('form#update_brand')[0].reset();\n    $(\"form#new_brand\").find(\"#btn-password\").removeClass('is-invalid');\n    $(\"form#new_brand\").find(\"#btn-password\").attr('aria-invalid', false);\n    $(\"form#update_brand\").find(\"#btn-password-up\").removeClass('is-invalid');\n    $(\"form#update_brand\").find(\"#btn-password-up\").attr('aria-invalid', false);\n  });\n  $('#createModal').on('show.bs.modal', function (event) {\n    // Encuentra el formulario dentro del modal y limpia los campos\n    $(this).find('form')[0].reset();\n    load_combobox(\"#suppliers_id\");\n  });\n  $(\"#suppliers_id\").multiselect({\n    enableHTML: false\n  });\n  $('#suppliersup_id').multiselect({\n    enableHTML: false\n  });\n  var load_combobox = function load_combobox(input) {\n    $.ajax({\n      processData: false,\n      contentType: false,\n      dataType: 'json',\n      type: \"GET\",\n      url: 'api/suppliers/all/combobox',\n      success: function success(response) {\n        if (response.length != 0) {\n          var options = [];\n          $.each(response, function (index, row) {\n            options.push({\n              label: row.name,\n              value: row.id\n            });\n          });\n          $(input).multiselect('dataprovider', options);\n        }\n      },\n      error: function error(xhr, textStatus, _error) {}\n    });\n  };\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/modules/brand/index.js\n");

/***/ }),

/***/ 6:
/*!***************************************************!*\
  !*** multi ./resources/js/modules/brand/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /usr/local/var/www/practica/resources/js/modules/brand/index.js */"./resources/js/modules/brand/index.js");


/***/ })

/******/ });