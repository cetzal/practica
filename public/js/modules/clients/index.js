/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 9);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/modules/clients/index.js":
/*!***********************************************!*\
  !*** ./resources/js/modules/clients/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n(function () {\n  var clients_id = [];\n  var module = 'clients';\n  $(\"#date_range\").daterangepicker(_defineProperty(_defineProperty(_defineProperty(_defineProperty({\n    maxDate: moment().endOf(),\n    showApplyButton: false,\n    autoApply: true,\n    showInputs: false\n  }, \"maxDate\", \"0\"), \"locale\", {\n    format: 'DD/MM/YYYY',\n    \"applyLabel\": \"Aplicar\",\n    \"cancelLabel\": \"Cancelar\"\n  }), \"todayHighlight\", true), \"autoUpdateInput\", false));\n  $('input[name=\"date_range\"]').on('apply.daterangepicker', function (ev, picker) {\n    $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY'));\n  });\n  var table = $('#clients-data-table').DataTable({\n    responsive: true,\n    autoWidth: true,\n    serverSide: true,\n    \"searching\": false,\n    \"bProcessing\": true,\n    //\"ajax\" : \"\",\n    \"ajax\": {\n      \"url\": 'api/clients',\n      \"data\": function data(d) {\n        var frm_data = $('form#from_search_client').serializeArray();\n        // return frm_data;\n        $.each(frm_data, function (key, val) {\n          d[val.name] = val.value;\n        });\n      }\n    },\n    \"createdRow\": function createdRow(row, data, dataIndex) {\n      $(row).addClass('client-link');\n      $(row).attr('data-client', JSON.stringify(data));\n    },\n    'columns': [{\n      data: \"text\",\n      \"render\": function render(data, type, full, meta) {\n        return '<div class=\"checkbox\"><input type=\"checkbox\" class=\"dt-checkboxes checkbox_client\"><label></label></div>';\n      }\n    }],\n    \"columnDefs\": [{\n      \"orderable\": false,\n      'targets': [0]\n    }, {\n      targets: [1],\n      render: function render(data, type, row, meta) {\n        return row.name;\n      }\n    }, {\n      targets: [2],\n      render: function render(data, type, row, meta) {\n        var is_active = row.is_active == 1 ? 'Activo' : 'Desactivado';\n        var class_text = \"text-success\";\n        if (row.is_active == 0) {\n          class_text = \"text-warning\";\n        }\n        data = '<span class=\"' + class_text + '\">' + is_active + '</span>';\n        return data;\n      }\n    }, {\n      targets: [3],\n      render: function render(data, type, row, meta) {\n        return row.created_by;\n      }\n    }, {\n      targets: [4],\n      render: function render(data, type, row, meta) {\n        if (row.created_at == null) {\n          return '';\n        }\n        return moment(row.created_at).format('DD/MM/YYYY HH:mm:ss');\n      }\n    }, {\n      targets: [5],\n      render: function render(data, type, row, meta) {\n        if (row.updated_at == null) {\n          return '';\n        }\n        return moment(row.updated_at).format('DD/MM/YYYY HH:mm:ss');\n      }\n    }, {\n      targets: [6],\n      render: function render(data, type, row, meta) {\n        var html = '<button type=\"button\" class=\"open-EditbrandDialog btn bg-success\" data-id=\"' + row.id + '\" data-bs-toggle=\"modal\" data-bs-target=\"#editModal\"><i class=\"fa fa-edit\" aria-hidden=\"true\"></i></button>';\n        html += '<a class=\"btn bg-danger m-1 remove\" data-id=\"' + row.id + '\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></a>';\n        html += '<a href=\"#\" class=\"btn bg-primary btn-sm redirect-record-log\" data-record-id=\"' + row.id + '\" data-record-name=\"' + row.name + '\"><i class=\"fa fa-eye\" aria-hidden=\"true\"></i></a>';\n        if (row.is_active == 1) {\n          html += '<a class=\"btn bg-grey m-1 desactivar btn-sm\" data-id=\"' + row.id + '\"><i class=\"fa fa-toggle-on\" aria-hidden=\"true\"></i></a>';\n        } else {\n          html += '<a class=\"btn bg-grey m-1 activar btn-sm\" data-id=\"' + row.id + '\"><i class=\"fa fa-toggle-off\" aria-hidden=\"true\"></i></a>';\n        }\n        return html;\n      }\n    }],\n    \"order\": [],\n    'language': {\n      'lengthMenu': '_MENU_',\n      \"info\": '<small> _START_ - _END_ (_TOTAL_)</small>',\n      \"search\": '',\n      'paginate': {\n        'previous': '<i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>',\n        'next': '<i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>'\n      }\n    }\n  });\n  $('#clients-data-table').on('click', '.redirect-record-log', function () {\n    var record_id = $(this).data('record-id').toString();\n    var record_name = $(this).data('record-name').toString();\n    window.location.href = window.location.origin + '/log-record/' + record_id + '?record_name=' + record_name + '&module_name=' + module;\n  });\n  $('.show_form_search').on('click', function (e) {\n    e.preventDefault();\n    $('.form_search').toggleClass('form_search_active');\n  });\n  $('.close_form').on('click', function (e) {\n    $('.form_search').removeClass('form_search_active');\n  });\n  $(\"#from_search_client\").on(\"submit\", function (event) {\n    event.preventDefault();\n    var date_range = $('#date_range').val();\n    var type_fecha = $('.client-select-date').val();\n    if (type_fecha == '' && date_range !== '') {\n      $.alert({\n        title: 'Filtra datos',\n        content: 'Selecione un tipo de fecha a consultar'\n      });\n      return '';\n    }\n    if (date_range == '' && type_fecha !== '') {\n      $.alert({\n        title: 'Filtra datos',\n        content: 'Selecione el rango de fecha'\n      });\n      return '';\n    }\n    table.ajax.reload();\n  });\n  $('.clear_form_client').on('click', function (e) {\n    $('#from_search_client')[0].reset();\n    table.ajax.reload();\n  });\n  $('#clients-data-table').on('click', '.open-EditbrandDialog ', function () {\n    var url = \"api/clients/\";\n    var id = $(this).data('id').toString();\n    url = url.concat(id);\n    $(\"input[name='client_id']\").val(id);\n    $.get(url, function (response) {\n      if (response.status == \"success\") {\n        $(\"input[name='name']\").val(response.data.name);\n        $(\"input[name='is_active']\").prop(\"checked\", response.data.is_active);\n      }\n    });\n  });\n  $('#clients-data-table').on('click', '.remove ', function (e) {\n    e.preventDefault();\n    var url = \"api/clients/\";\n    var id = $(this).data('id').toString();\n    url = url.concat(id);\n    var Jquery = $.Jquery;\n    $.confirm({\n      title: 'Eliminar clientes',\n      content: 'Realmente quieres eliminar el cliente',\n      buttons: {\n        deleteUser: {\n          text: 'Si, eliminar',\n          action: function action() {\n            $.ajax({\n              url: url,\n              type: 'DELETE',\n              success: function success(response) {\n                $.alert({\n                  title: response.status,\n                  content: response.message\n                });\n                table.ajax.reload();\n              }\n            });\n          }\n        },\n        cancelar: function cancelar() {\n          // $.alert('action is canceled');\n        }\n      }\n    });\n  });\n  $('#clients-data-table').on('click', '.desactivar ', function (e) {\n    e.preventDefault();\n    var url = \"api/clients/{id}/deactivate\";\n    var id = $(this).data('id').toString();\n    url = url.replace(/{id}/g, id);\n    var Jquery = $.Jquery;\n    $.confirm({\n      title: 'Desactivar clientes',\n      content: 'Realmente quieres desactivar el cliente',\n      buttons: {\n        deleteUser: {\n          text: 'Si, desactivar',\n          action: function action() {\n            $.ajax({\n              url: url,\n              type: 'PUT',\n              success: function success(response) {\n                $.alert({\n                  title: response.status,\n                  content: response.message\n                });\n                table.ajax.reload();\n              }\n            });\n          }\n        },\n        cancelar: function cancelar() {\n          // $.alert('action is canceled');\n        }\n      }\n    });\n  });\n  $('#clients-data-table').on('click', '.activar ', function (e) {\n    e.preventDefault();\n    var url = \"api/clients/{id}/activate\";\n    var id = $(this).data('id').toString();\n    url = url.replace(/{id}/g, id);\n    var Jquery = $.Jquery;\n    $.confirm({\n      title: 'Activar clientes',\n      content: 'Realmente quieres activar el cliente',\n      buttons: {\n        deleteUser: {\n          text: 'Si, activar',\n          action: function action() {\n            $.ajax({\n              url: url,\n              type: 'PUT',\n              success: function success(response) {\n                $.alert({\n                  title: response.status,\n                  content: response.message\n                });\n                table.ajax.reload();\n              }\n            });\n          }\n        },\n        cancelar: function cancelar() {\n          // $.alert('action is canceled');\n        }\n      }\n    });\n  });\n  $(\"#select_all\").on(\"change\", function () {\n    if ($(this).is(':checked')) {\n      $(\"tbody input[type='checkbox']\").prop('checked', true);\n    } else {\n      $(\"tbody input[type='checkbox']\").prop('checked', false);\n    }\n    clients_id = [];\n    verific_checks_users(0);\n  });\n  $('#clients-data-table').on('click', \"tbody input[type='checkbox']\", function (e) {\n    if (!$(this).is(\":checked\")) {\n      //If the checkbox is checked\n      clients_id = [];\n    }\n    verific_checks_users(1);\n  });\n  var verific_checks_users = function verific_checks_users(num) {\n    $(':checkbox.checkbox_client:checked').each(function (i) {\n      var client_data = $(this).closest('tr').data('client');\n      if (typeof client_data !== 'undefined') {\n        clients_id[i] = client_data.id;\n      }\n    });\n  };\n  $(\".delete_all_client\").on('click', function (e) {\n    e.preventDefault();\n    if (clients_id.length) {\n      $.confirm({\n        title: 'Eliminar clientes',\n        content: 'Realmente quieres eliminar los usarios selecionados',\n        buttons: {\n          deleteUser: {\n            text: 'Si, eliminar',\n            action: function action() {\n              $.ajax({\n                type: 'PUT',\n                url: 'api/clients/all/deletebyselection',\n                data: {\n                  clientsIdArray: clients_id\n                },\n                success: function success(data) {\n                  clients_id = [];\n                  $.alert({\n                    title: 'Eliminar clientes seleccionados',\n                    content: 'se elimino todo los clientes selecionados '\n                  });\n                  $(\"#select_all\").prop('checked', false);\n                  $('#clients-data-table').DataTable().ajax.reload();\n                }\n              });\n            }\n          },\n          cancelar: function cancelar() {\n            // $.alert('action is canceled');\n          }\n        }\n      });\n    } else {\n      $.alert({\n        title: 'Eliminar clientes',\n        content: 'Selecciones los clientes que deseas eliminar'\n      });\n    }\n  });\n  $(\".active_all_client\").on('click', function (e) {\n    e.preventDefault();\n    if (clients_id.length) {\n      $.confirm({\n        title: 'Activar clientes',\n        content: 'Realmente quieres Activar los clientes selecionados',\n        buttons: {\n          deleteUser: {\n            text: 'Si, activar',\n            action: function action() {\n              $.ajax({\n                type: 'PUT',\n                url: 'api/clients/all/activarbyselection',\n                data: {\n                  clientsIdArray: clients_id\n                },\n                success: function success(data) {\n                  $.alert({\n                    title: 'Activar clientes',\n                    content: 'se activado todo los clientes selecionados '\n                  });\n                  clients_id = [];\n                  $(\"#select_all\").prop('checked', false);\n                  $('#clients-data-table').DataTable().ajax.reload();\n                }\n              });\n            }\n          },\n          cancelar: function cancelar() {\n            // $.alert('action is canceled');\n          }\n        }\n      });\n    } else {\n      $.alert({\n        title: 'Activar clientes',\n        content: 'Selecciones los clientes que deseas activar'\n      });\n    }\n  });\n  $(\".desactive_all_client\").on('click', function (e) {\n    e.preventDefault();\n    if (clients_id.length) {\n      $.confirm({\n        title: 'Desactivar clientes',\n        content: 'Realmente quieres desactivar los clientes selecionados',\n        buttons: {\n          deleteUser: {\n            text: 'Si, activar',\n            action: function action() {\n              $.ajax({\n                type: 'PUT',\n                url: 'api/clients/all/deactivatebyselection',\n                data: {\n                  clientsIdArray: clients_id\n                },\n                success: function success(data) {\n                  clients_id = [];\n                  $.alert({\n                    title: 'Desactiva clientes',\n                    content: 'Se desactivo todo los clientes selecionados '\n                  });\n                  $(\"#select_all\").prop('checked', false);\n                  $('#clients-data-table').DataTable().ajax.reload();\n                }\n              });\n            }\n          },\n          cancelar: function cancelar() {\n            // $.alert('action is canceled');\n          }\n        }\n      });\n    } else {\n      $.alert({\n        title: 'Desactivar clientes',\n        content: 'Selecciones los clientes que deseas desactivar'\n      });\n    }\n  });\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/modules/clients/index.js\n");

/***/ }),

/***/ 9:
/*!*****************************************************!*\
  !*** multi ./resources/js/modules/clients/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /usr/local/var/www/practica/resources/js/modules/clients/index.js */"./resources/js/modules/clients/index.js");


/***/ })

/******/ });