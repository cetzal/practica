/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 15);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/modules/product/edit.js":
/*!**********************************************!*\
  !*** ./resources/js/modules/product/edit.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function () {\n  var host = window.location.origin;\n  var product_id = $('#product_id').val();\n  function formatErrorUsingClassesAndPopover(element, array_of_problems) {\n    var someHTML = '';\n    array_of_problems.forEach(function (e) {\n      someHTML += '<li>' + element + ': ' + e + '</li>';\n    });\n    // $('#'+element+'_error_section').html('<ul>'+someHTML+'</ul>');\n    // $('#'+element).addClass('is-invalid');\n\n    return '<ul>' + someHTML + '</ul><br>';\n  }\n  $('[data-toggle=\"tooltip\"]').tooltip();\n  $(\"select[name='type']\").val($(\"input[name='type_hidden']\").val());\n  var promotion = $(\"input[name='promotion_hidden']\").val();\n  if (promotion) {\n    $(\"input[name='promotion']\").prop('checked', true);\n    $(\"#promotion_price\").show(300);\n    $(\"#start_date\").show(300);\n    $(\"#last_date\").show(300);\n  } else {\n    $(\"#promotion_price\").hide(300);\n    $(\"#start_date\").hide(300);\n    $(\"#last_date\").hide(300);\n  }\n  $.ajaxSetup({\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    }\n  });\n  $('#genbutton').on(\"click\", function () {\n    $.get(host + '/api/product/gencode', function (data) {\n      $(\"input[name='code']\").val(data);\n    });\n  });\n\n  // tinymce.init({\n  //   selector: 'textarea',\n  //   height: 130,\n  //   plugins: [\n  //     'advlist autolink lists link image charmap print preview anchor textcolor',\n  //     'searchreplace visualblocks code fullscreen',\n  //     'insertdatetime media table contextmenu paste code wordcount'\n  //   ],\n  //   toolbar: 'insert | undo redo |  formatselect | bold italic backcolor  | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat',\n  //   branding:false\n  // });\n\n  var barcode_symbology = $(\"input[name='barcode_symbology_hidden']\").val();\n  $('select[name=barcode_symbology]').val(barcode_symbology);\n  var cat = $(\"input[name='category']\").val();\n  $('select[name=category_id]').val(cat);\n  if ($(\"input[name='unit']\").val()) {\n    $('select[name=unit_id]').val($(\"input[name='unit']\").val());\n    populate_unit($(\"input[name='unit']\").val());\n  }\n  var tax = $(\"input[name='tax']\").val();\n  if (tax) $('select[name=tax_id]').val(tax);\n  var tax_method = $(\"input[name='tax_method_id']\").val();\n  $('select[name=tax_method]').val(tax_method);\n  $('select[name=\"unit_id\"]').on('change', function () {\n    unitID = $(this).val();\n    if (unitID) {\n      populate_unit_second(unitID);\n    } else {\n      $('select[name=\"sale_unit_id\"]').empty();\n      $('select[name=\"purchase_unit_id\"]').empty();\n    }\n  });\n  function populate_unit(unitID) {\n    var url = 'api/product/saleunit/' + unitID;\n    $.ajax({\n      url: host + '/' + url,\n      type: \"GET\",\n      dataType: \"json\",\n      success: function success(data) {\n        $('select[name=\"sale_unit_id\"]').empty();\n        $('select[name=\"purchase_unit_id\"]').empty();\n        $.each(data, function (key, value) {\n          $('select[name=\"sale_unit_id\"]').append('<option value=\"' + key + '\">' + value + '</option>');\n          $('select[name=\"purchase_unit_id\"]').append('<option value=\"' + key + '\">' + value + '</option>');\n        });\n        var sale_unit = $(\"input[name='sale_unit']\").val();\n        var purchase_unit = $(\"input[name='purchase_unit']\").val();\n        $('#sale-unit').val(sale_unit);\n        $('select[name=purchase_unit_id]').val(purchase_unit);\n      }\n    });\n  }\n  function populate_unit_second(unitID) {\n    var url = 'api/product/saleunit/' + unitID;\n    url = url.replace(':id', unitID);\n    $.ajax({\n      url: host + '/' + url,\n      type: \"GET\",\n      dataType: \"json\",\n      success: function success(data) {\n        $('select[name=\"sale_unit_id\"]').empty();\n        $('select[name=\"purchase_unit_id\"]').empty();\n        $.each(data, function (key, value) {\n          $('select[name=\"sale_unit_id\"]').append('<option value=\"' + key + '\">' + value + '</option>');\n          $('select[name=\"purchase_unit_id\"]').append('<option value=\"' + key + '\">' + value + '</option>');\n        });\n      }\n    });\n  }\n  ;\n  $(\"#promotion\").on(\"change\", function () {\n    if ($(this).is(':checked')) {\n      $(\"#promotion_price\").show();\n      $(\"#start_date\").show();\n      $(\"#last_date\").show();\n    } else {\n      $(\"#promotion_price\").hide();\n      $(\"#start_date\").hide();\n      $(\"#last_date\").hide();\n    }\n  });\n  var starting_date = $('#starting_date');\n  starting_date.daterangepicker({\n    singleDatePicker: true,\n    showDropdowns: true,\n    minYear: 1901,\n    locale: {\n      format: 'DD/MM/YYYY'\n    }\n  });\n  var ending_date = $('#ending_date');\n  ending_date.daterangepicker({\n    singleDatePicker: true,\n    showDropdowns: true,\n    minYear: 1901,\n    locale: {\n      format: 'DD/MM/YYYY'\n    }\n  });\n\n  //dropzone portion\n  Dropzone.autoDiscover = false;\n  jQuery.validator.setDefaults({\n    errorPlacement: function errorPlacement(error, element) {\n      if (error.html() == 'Select Category...') error.html('This field is required.');\n      $(element).closest('div.form-group').find('.validation-msg').html(error.html());\n    },\n    highlight: function highlight(element) {\n      $(element).closest('div.form-group').removeClass('has-success').addClass('has-error');\n    },\n    unhighlight: function unhighlight(element, errorClass, validClass) {\n      $(element).closest('div.form-group').removeClass('has-error').addClass('has-success');\n      $(element).closest('div.form-group').find('.validation-msg').html('');\n    }\n  });\n  $.validator.addMethod(\"requiredIfChecked\", function (value, element) {\n    // Check if checkbox is checked and date is empty\n    if ($('#promotion').prop('checked') && value === '') {\n      return false; // Return false to indicate validation failure\n    }\n    return true; // Return true if validation passes\n  }, \"Date is required if checkbox is checked.\");\n  $(\"#product-form\").validate({\n    rules: {\n      name: 'required',\n      code: 'required',\n      brand_id: 'required',\n      promotion_price: {\n        requiredIfChecked: true,\n        required: true\n      }\n    },\n    onfocusout: false,\n    invalidHandler: function invalidHandler(form, validator) {\n      var errors = validator.numberOfInvalids();\n      if (errors) {\n        validator.errorList[0].element.focus();\n      }\n    },\n    highlight: function highlight(input) {\n      $(input).addClass('is-invalid');\n    },\n    unhighlight: function unhighlight(input) {\n      $(input).removeClass('is-invalid');\n    },\n    errorElement: 'span',\n    errorPlacement: function errorPlacement(error, element) {\n      error.addClass('invalid-feedback');\n      element.closest('.form-group').append(error);\n    },\n    // errorPlacement: function ( error, element ) {\n    //     // Add the `invalid-feedback` class to the error element\n    //     error.addClass(\"invalid-feedback\");\n    //     error.insertAfter(element);\n    // },\n    messages: {\n      name: 'The name is required',\n      code: 'The code is required',\n      brand_id: 'The brand is required',\n      promotion_price: {\n        required: 'The promition price is required'\n      }\n    }\n  });\n  function validate() {\n    var product_code = $(\"input[name='code']\").val();\n    var barcode_symbology = $('select[name=\"barcode_symbology\"]').val();\n    var exp = /^\\d+$/;\n    if (!product_code.match(exp) && (barcode_symbology == 'UPCA' || barcode_symbology == 'UPCE' || barcode_symbology == 'EAN8' || barcode_symbology == 'EAN13')) {\n      alert('Product code must be numeric.');\n      return false;\n    } else if (product_code.match(exp)) {\n      if (barcode_symbology == 'UPCA' && product_code.length > 11) {\n        alert('Product code length must be less than 12');\n        return false;\n      } else if (barcode_symbology == 'EAN8' && product_code.length > 7) {\n        alert('Product code length must be less than 8');\n        return false;\n      } else if (barcode_symbology == 'EAN13' && product_code.length > 12) {\n        alert('Product code length must be less than 13');\n        return false;\n      }\n    }\n    $(\"input[name='price']\").prop('disabled', false);\n    return true;\n  }\n  $(\".dropzone\").sortable({\n    items: '.dz-preview',\n    cursor: 'grab',\n    opacity: 0.5,\n    containment: '.dropzone',\n    distance: 20,\n    tolerance: 'pointer',\n    stop: function stop() {\n      var queue = myDropzone.getAcceptedFiles();\n      newQueue = [];\n      $('#imageUpload .dz-preview .dz-filename [data-dz-name]').each(function (count, el) {\n        var name = el.innerHTML;\n        queue.forEach(function (file) {\n          if (file.name === name) {\n            newQueue.push(file);\n          }\n        });\n      });\n      myDropzone.files = newQueue;\n    }\n  });\n  var url_update = host + '/api/product/';\n  url_update = url_update.concat(product_id);\n  myDropzone = new Dropzone('div#imageUpload', {\n    addRemoveLinks: true,\n    autoProcessQueue: false,\n    uploadMultiple: true,\n    parallelUploads: 100,\n    maxFilesize: 12,\n    paramName: 'image',\n    clickable: true,\n    method: 'POST',\n    url: url_update,\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    },\n    renameFile: function renameFile(file) {\n      var dt = new Date();\n      var time = dt.getTime();\n      return time + file.name;\n    },\n    acceptedFiles: \".jpeg,.jpg,.png,.gif\",\n    init: function init() {\n      var myDropzone = this;\n      $('#submit-btn').on(\"click\", function (e) {\n        e.preventDefault();\n        if ($(\"#product-form\").valid() && validate()) {\n          tinyMCE.triggerSave();\n          if (myDropzone.getAcceptedFiles().length) {\n            myDropzone.processQueue();\n          } else {\n            $.ajax({\n              type: 'POST',\n              url: url_update,\n              data: $(\"#product-form\").serialize(),\n              success: function success(response) {\n                $.confirm({\n                  title: 'Actualizar producto',\n                  content: 'El producto se ha actualizado con exito',\n                  buttons: {\n                    ok: function ok() {\n                      window.location.replace('/product');\n                    }\n                  }\n                });\n                //location.href = '../';\n              },\n              error: function error(response) {\n                if (response.status == 422) {\n                  //toastError(err.responseJSON.message);\n                  var details = response.responseJSON.errors;\n                  var content = '';\n                  Object.keys(details).forEach(function (field) {\n                    content += formatErrorUsingClassesAndPopover(field, details[field]);\n                  });\n                  $.alert({\n                    title: 'Error',\n                    content: content\n                  });\n                }\n              }\n            });\n          }\n        }\n      });\n      this.on('sending', function (file, xhr, formData) {\n        // Append all form inputs to the formData Dropzone will POST\n        var data = $(\"#product-form\").serializeArray();\n        $.each(data, function (key, el) {\n          formData.append(el.name, el.value);\n        });\n      });\n    },\n    error: function error(file, response) {\n      if (response.status == 422) {\n        //toastError(err.responseJSON.message);\n        var details = response.responseJSON.errors;\n        var content = '';\n        Object.keys(details).forEach(function (field) {\n          content += formatErrorUsingClassesAndPopover(field, details[field]);\n        });\n        $.alert({\n          title: 'Error',\n          content: content\n        });\n      }\n    },\n    successmultiple: function successmultiple(file, response) {\n      $.confirm({\n        title: 'Actualizar producto',\n        content: 'El producto se ha actualizado con exito',\n        autoClose: 'ok|3000',\n        buttons: {\n          ok: function ok() {\n            window.location.replace('/product');\n          }\n        }\n      });\n      //location.href = '../';\n      //console.log('sss: '+ response);\n    },\n    completemultiple: function completemultiple(file, response) {\n      console.log(file, response, \"completemultiple\");\n    },\n    reset: function reset() {\n      console.log(\"resetFiles\");\n      this.removeAllFiles(true);\n    }\n  });\n  var brand = $(\"input[name='brand']\").val();\n  var supplier = $(\"input[name='supplier']\").val();\n  $(document).ready(function () {\n    load_combobox(\".select-supplier\");\n    brandsBySupplier(supplier);\n  });\n  var load_combobox = function load_combobox(input) {\n    $(input).append('<option value=\"\">Select suppliers</option>');\n    $.ajax({\n      processData: false,\n      contentType: false,\n      dataType: 'json',\n      type: \"GET\",\n      url: host + '/api/suppliers/all/combobox',\n      success: function success(response) {\n        if (response.length != 0) {\n          $.each(response, function (index, row) {\n            $(input).append('<option value=' + row.id + '>' + row.name + '</option>');\n          });\n          $('select[name=\"supplier_id\"]').val(supplier);\n        }\n      },\n      error: function error(xhr, textStatus, _error) {}\n    });\n  };\n  $('select[name=\"supplier_id\"]').on('change', function (e) {\n    e.preventDefault();\n    supplier_id = $(this).val();\n    if (supplier_id) {\n      brandsBySupplier(supplier_id);\n    }\n  });\n  function brandsBySupplier(supplier_id) {\n    var url = 'api/brand/supplier/' + supplier_id;\n    $('select[name=\"brand_id\"]').empty();\n    $('select[name=\"brand_id\"]').append('<option value=\"\">Select brand</option>');\n    $.ajax({\n      url: host + '/' + url,\n      type: \"GET\",\n      dataType: \"json\",\n      success: function success(response) {\n        $.each(response, function (index, row) {\n          $('select[name=\"brand_id\"]').append('<option value=' + row.id + '>' + row.name + '</option>');\n          if (row.id == parseInt(brand)) {\n            $('select[name=\"brand_id\"]').val(brand);\n          }\n        });\n      }\n    });\n  }\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/modules/product/edit.js\n");

/***/ }),

/***/ 15:
/*!****************************************************!*\
  !*** multi ./resources/js/modules/product/edit.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /usr/local/var/www/practica/resources/js/modules/product/edit.js */"./resources/js/modules/product/edit.js");


/***/ })

/******/ });