/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 16);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/modules/product/index.js":
/*!***********************************************!*\
  !*** ./resources/js/modules/product/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function () {\n  var qty = [];\n  var htmltext;\n  var slidertext;\n  var product_id = [];\n  $.ajaxSetup({\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    }\n  });\n  function escapeHtml(text) {\n    return text.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n  }\n  $(\"#date_range\").daterangepicker({\n    maxDate: moment().endOf(),\n    showApplyButton: false,\n    autoApply: true,\n    showInputs: false,\n    locale: {\n      format: 'DD/MM/YYYY'\n    },\n    todayHighlight: true,\n    autoUpdateInput: false\n  });\n  $(\"#date_update\").daterangepicker({\n    locale: {\n      format: 'DD/MM/YYYY'\n    },\n    todayHighlight: true,\n    autoUpdateInput: false\n  });\n  $('input[name=\"date_range\"]').on('apply.daterangepicker', function (ev, picker) {\n    var type_fecha = $('.form-select').val();\n    if (type_fecha == '') {\n      $.alert({\n        title: 'Filtra datos',\n        content: 'Selecrione un tipo de fecha a consultar'\n      });\n    }\n    $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY'));\n  });\n  $('input[name=\"date_range\"]').on('cancel.daterangepicker', function (ev, picker) {\n    $(this).val('');\n  });\n  $('input[name=\"date_update\"]').on('apply.daterangepicker', function (ev, picker) {\n    $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY'));\n  });\n  $('input[name=\"date_update\"]').on('cancel.daterangepicker', function (ev, picker) {\n    $(this).val('');\n  });\n\n  //product_id.length = 0;\n  $(\".delete_all_prod\").on('click', function (e) {\n    e.preventDefault();\n    if (product_id.length) {\n      $.confirm({\n        title: 'Eliminar producto',\n        content: 'Realmente quieres eliminar los producto selecionados?',\n        buttons: {\n          deleteUser: {\n            text: 'Si, eliminar',\n            action: function action() {\n              $.ajax({\n                type: 'PUT',\n                url: 'api/product/all/deletebyselection',\n                data: {\n                  productIdArray: product_id\n                },\n                success: function success(data) {\n                  $.alert({\n                    title: 'Eliminat productos',\n                    content: 'se elimino todo los productos selecionados '\n                  });\n                  $(\"#select_all\").prop('checked', false);\n                  $('#product-data-table').DataTable().ajax.reload();\n                }\n              });\n            }\n          },\n          cancelar: function cancelar() {\n            // $.alert('action is canceled');\n          }\n        }\n      });\n    } else {\n      $.alert({\n        title: 'Eliminat productos',\n        content: 'Selecciones los productos que deseas eliminar'\n      });\n    }\n  });\n  $(\".active_all_prod\").on('click', function (e) {\n    e.preventDefault();\n    if (product_id.length) {\n      $.confirm({\n        title: 'Activar producto',\n        content: 'Realmente quieres activar los productos selecionados?',\n        buttons: {\n          deleteUser: {\n            text: 'Si, Activar',\n            action: function action() {\n              $.ajax({\n                type: 'PUT',\n                url: 'api/product/all/activatebyselection',\n                data: {\n                  productIdArray: product_id\n                },\n                success: function success(data) {\n                  $.alert({\n                    title: 'Activar productos',\n                    content: 'se activado todo los productos selecionados '\n                  });\n                  $(\"#select_all\").prop('checked', false);\n                  $('#product-data-table').DataTable().ajax.reload();\n                }\n              });\n            }\n          },\n          cancelar: function cancelar() {\n            // $.alert('action is canceled');\n          }\n        }\n      });\n    } else {\n      $.alert({\n        title: 'Activar productos',\n        content: 'Selecciones los productos que deseas activar'\n      });\n    }\n  });\n  $(\".desactive_all_prod\").on('click', function (e) {\n    e.preventDefault();\n    if (product_id.length) {\n      $.confirm({\n        title: 'Desactivar producto',\n        content: 'Realmente quieres desactivar los productos selecionados?',\n        buttons: {\n          deleteUser: {\n            text: 'Si, Desactivar',\n            action: function action() {\n              $.ajax({\n                type: 'PUT',\n                url: 'api/product/all/deactivatebyselection',\n                data: {\n                  productIdArray: product_id\n                },\n                success: function success(data) {\n                  $.alert({\n                    title: 'Desactiva productos',\n                    content: 'Se desactivo todo los productos selecionados '\n                  });\n                  $(\"#select_all\").prop('checked', false);\n                  $('#product-data-table').DataTable().ajax.reload();\n                }\n              });\n            }\n          },\n          cancelar: function cancelar() {\n            // $.alert('action is canceled');\n          }\n        }\n      });\n    } else {\n      $.alert({\n        title: 'Desactivar productos',\n        content: 'Selecciones los productos que deseas desactivar'\n      });\n    }\n  });\n  $('.show_form_search').on('click', function (e) {\n    e.preventDefault();\n    $('.form_search').toggleClass('form_search_active');\n  });\n  $('.close_form').on('click', function (e) {\n    $('.form_search').removeClass('form_search_active');\n  });\n  $(\"#product-data-table #select_all\").on(\"change\", function () {\n    if ($(this).is(':checked')) {\n      $(\"tbody input[type='checkbox']\").prop('checked', true);\n    } else {\n      $(\"tbody input[type='checkbox']\").prop('checked', false);\n    }\n    product_id = [];\n    verific_checks_prod(0);\n  });\n  $('#product-data-table').on('click', \"tbody input[type='checkbox']\", function (e) {\n    if (!$(this).is(\":checked\")) {\n      //If the checkbox is checked\n      product_id = [];\n    }\n    verific_checks_prod(1);\n  });\n  var verific_checks_prod = function verific_checks_prod(num) {\n    $(':checkbox:checked').each(function (i) {\n      i += num;\n      if (i) {\n        var product_data = $(this).closest('tr').data('product');\n        console.log(product_data);\n        product_id[i - 1] = product_data.id;\n      }\n    });\n  };\n  $(document).on(\"click\", \"tr.product-link td:not(:first-child, :last-child)\", function () {\n    productDetails($(this).parent().data('product'), $(this).parent().data('imagedata'));\n  });\n  $(document).on(\"click\", \".view\", function () {\n    var product = $(this).parent().parent().parent().parent().parent().data('product');\n    var imagedata = $(this).parent().parent().parent().parent().parent().data('imagedata');\n    productDetails(product, imagedata);\n  });\n  $('#product-data-table').on('click', '.remove', function () {\n    var url = \"api/product/:id/delete\";\n    var id = $(this).data('id').toString();\n    // url = url.concat(id).concat(\"/delete\");\n    url = url.replace(':id', id);\n    var Jquery = $.Jquery;\n    $.confirm({\n      title: 'Eliminar producto?',\n      content: 'Realmente quieres eliminar el producto',\n      // autoClose: 'cancelAction|8000',\n      buttons: {\n        deleteUser: {\n          text: 'Eliminar producto',\n          action: function action() {\n            $.ajax({\n              url: url,\n              type: 'DELETE',\n              success: function success(response) {\n                $.alert({\n                  title: response.status,\n                  content: response.message\n                });\n                $('#product-data-table').DataTable().ajax.reload();\n              }\n            });\n          }\n        },\n        cancelAction: function cancelAction() {\n          // $.alert('action is canceled');\n        }\n      }\n    });\n  });\n  $('#product-data-table').on('click', '.desactivar', function () {\n    var url = \"api/product/:id/deactivate\";\n    var id = $(this).data('id').toString();\n    url = url.replace(':id', id);\n    var Jquery = $.Jquery;\n    $.confirm({\n      title: 'Desactivar producto',\n      content: 'Realmente quieres desactivar el producto',\n      buttons: {\n        deleteUser: {\n          text: 'Si, desactivar',\n          action: function action() {\n            $.ajax({\n              url: url,\n              type: 'PUT',\n              success: function success(response) {\n                $.alert({\n                  title: response.status,\n                  content: response.message\n                });\n                $('#product-data-table').DataTable().ajax.reload();\n              }\n            });\n          }\n        },\n        cancelar: function cancelar() {\n          // $.alert('action is canceled');\n        }\n      }\n    });\n  });\n  $('#product-data-table').on('click', '.activar', function () {\n    var url = \"api/product/:id/activate\";\n    var id = $(this).data('id').toString();\n    url = url.replace(':id', id);\n    var Jquery = $.Jquery;\n    $.confirm({\n      title: 'Activar producto',\n      content: 'Realmente quieres activar el producto',\n      buttons: {\n        deleteUser: {\n          text: 'Si, activar',\n          action: function action() {\n            $.ajax({\n              url: url,\n              type: 'PUT',\n              success: function success(response) {\n                $.alert({\n                  title: response.status,\n                  content: response.message\n                });\n                $('#product-data-table').DataTable().ajax.reload();\n              }\n            });\n          }\n        },\n        cancelar: function cancelar() {\n          // $.alert('action is canceled');\n        }\n      }\n    });\n  });\n  $(document).ready(function () {\n    var table = $('#product-data-table').DataTable({\n      responsive: true,\n      \"searching\": false,\n      \"bProcessing\": true,\n      fixedHeader: {\n        header: true,\n        footer: true\n      },\n      fixedColumns: {\n        left: 1,\n        right: 1\n      },\n      scrollCollapse: true,\n      scrollX: true,\n      scrollY: 300,\n      \"processing\": true,\n      \"serverSide\": true,\n      \"ajax\": {\n        url: \"api/product/list\",\n        \"data\": function data(d) {\n          var frm_data = $('form#from_search_prod').serializeArray();\n          // return frm_data;\n          $.each(frm_data, function (key, val) {\n            d[val.name] = val.value;\n          });\n        },\n        type: \"GET\"\n      },\n      \"createdRow\": function createdRow(row, data, dataIndex) {\n        $(row).addClass('product-link');\n        $(row).attr('data-product', JSON.stringify(data));\n        // $(row).attr('data-product', data['product']);\n        // $(row).attr('data-imagedata', data['imagedata']);\n      },\n      \"columns\": [{\n        \"data\": \"id\"\n      }, {\n        \"data\": \"picture\"\n      }, {\n        \"data\": \"name\"\n      }, {\n        \"data\": \"code\"\n      }, {\n        \"data\": \"brand_name\"\n      }, {\n        \"data\": \"category_name\"\n      }, {\n        \"data\": \"qty\"\n      }, {\n        \"data\": \"unit_name\"\n      }, {\n        \"data\": \"price\"\n      }, {\n        \"data\": \"status\"\n      }, {\n        \"data\": \"created_at\"\n      }, {\n        \"data\": \"updated_at\"\n      }\n      //{\"data\": \"options\"},\n      ],\n      'language': {\n        'lengthMenu': '_MENU_',\n        \"info\": '<small> _START_ - _END_ (_TOTAL_)</small>',\n        \"search\": '{{trans(\"file.Search\")}}',\n        'paginate': {\n          'previous': '<i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>',\n          'next': '<i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>'\n        }\n      },\n      order: [['2', 'asc']],\n      'columnDefs': [{\n        \"orderable\": false,\n        'targets': [0, 1, 12]\n      }, {\n        'render': function render(data, type, row, meta) {\n          if (type === 'display') {\n            data = '<div class=\"checkbox\"><input type=\"checkbox\" class=\"dt-checkboxes\"><label></label></div>';\n          }\n          return data;\n        },\n        'checkboxes': {\n          'selectRow': true,\n          'selectAllRender': '<div class=\"checkbox\"><input type=\"checkbox\" class=\"dt-checkboxes\"><label></label></div>'\n        },\n        'targets': [0]\n      }, {\n        'targets': [1],\n        'render': function render(data, type, row, meta) {\n          var _picture = 'avarat.png';\n          if (row.picture != null) {\n            var _pictures = row.picture.split(\",\");\n            _picture = _pictures[_pictures.length - 1];\n            _picture = escapeHtml(_picture);\n          }\n          return '<img src=\"public/images/product/' + _picture + '\" height=\"80\" width=\"80\">';\n          ;\n        }\n      }, {\n        'targets': [9],\n        'render': function render(data, type, row, meta) {\n          //return row.is_active == 1 ? 'Activo' : 'Desactivado';\n\n          var is_active = row.is_active == 1 ? 'Activo' : 'Desactivado';\n          var class_text = \"text-success\";\n          if (row.is_active == 0) {\n            class_text = \"text-warning\";\n          }\n          data = '<span class=\"' + class_text + '\">' + is_active + '</span>';\n          return data;\n        }\n      }, {\n        'targets': [10],\n        'render': function render(data, type, row, meta) {\n          if (row.created_at == null) {\n            return '';\n          }\n          return moment(row.created_at).format('DD/MM/YYYY HH:mm:ss');\n        }\n      }, {\n        'targets': [11],\n        'render': function render(data, type, row, meta) {\n          if (row.updated_at == null) {\n            return '';\n          }\n          return moment(row.updated_at).format('DD/MM/YYYY HH:mm:ss');\n        }\n      }, {\n        'targets': [12],\n        'render': function render(data, type, row, meta) {\n          var url_edit = \"product/:id/edit\";\n          url_edit = url_edit.replace(':id', row.id);\n          var $html = '<a href=\"' + url_edit + '\" class=\"btn bg-success btn-sm\" data-id=\"' + row.id + '\"><i class=\"fa fa-edit\" aria-hidden=\"true\"></i></a>';\n          $html += '<a class=\"btn bg-danger m-1 remove btn-sm\" data-id=\"' + row.id + '\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></a>';\n          if (row.is_active == 1) {\n            $html += '<a class=\"btn bg-grey m-1 desactivar btn-sm\" data-id=\"' + row.id + '\"><i class=\"fa fa-toggle-on\" aria-hidden=\"true\"></i></a>';\n          } else {\n            $html += '<a class=\"btn bg-grey m-1 activar btn-sm\" data-id=\"' + row.id + '\"><i class=\"fa fa-toggle-off\" aria-hidden=\"true\"></i></a>';\n          }\n          //$html += '<a class=\"btn bs-info m-1 view\"><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i></a>';\n          return $html;\n        }\n      }],\n      'select': {\n        style: 'multi',\n        selector: 'td:first-child'\n      },\n      'lengthMenu': [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n    });\n  });\n  $(\"#from_search_prod\").on(\"submit\", function (event) {\n    event.preventDefault();\n    var date_range = $('#date_range').val();\n    var type_fecha = $('.product-select-date').val();\n    console.log(type_fecha);\n    if (type_fecha == '' && date_range !== '') {\n      $.alert({\n        title: 'Filtra datos',\n        content: 'Selecione un tipo de fecha a consultar'\n      });\n      return '';\n    }\n    if (date_range == '' && type_fecha !== '') {\n      $.alert({\n        title: 'Filtra datos',\n        content: 'Selecione el rango de fecha'\n      });\n      return '';\n    }\n    $('#product-data-table').DataTable().ajax.reload();\n  });\n  $('.clear_form_prod').on('click', function (e) {\n    $('#from_search_prod')[0].reset();\n    $('#product-data-table').DataTable().ajax.reload();\n  });\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvbW9kdWxlcy9wcm9kdWN0L2luZGV4LmpzP2MwZDkiXSwibmFtZXMiOlsicXR5IiwiaHRtbHRleHQiLCJzbGlkZXJ0ZXh0IiwicHJvZHVjdF9pZCIsIiQiLCJhamF4U2V0dXAiLCJoZWFkZXJzIiwiYXR0ciIsImVzY2FwZUh0bWwiLCJ0ZXh0IiwicmVwbGFjZSIsImRhdGVyYW5nZXBpY2tlciIsIm1heERhdGUiLCJtb21lbnQiLCJlbmRPZiIsInNob3dBcHBseUJ1dHRvbiIsImF1dG9BcHBseSIsInNob3dJbnB1dHMiLCJsb2NhbGUiLCJmb3JtYXQiLCJ0b2RheUhpZ2hsaWdodCIsImF1dG9VcGRhdGVJbnB1dCIsIm9uIiwiZXYiLCJwaWNrZXIiLCJ0eXBlX2ZlY2hhIiwidmFsIiwiYWxlcnQiLCJ0aXRsZSIsImNvbnRlbnQiLCJzdGFydERhdGUiLCJlbmREYXRlIiwiZSIsInByZXZlbnREZWZhdWx0IiwibGVuZ3RoIiwiY29uZmlybSIsImJ1dHRvbnMiLCJkZWxldGVVc2VyIiwiYWN0aW9uIiwiYWpheCIsInR5cGUiLCJ1cmwiLCJkYXRhIiwicHJvZHVjdElkQXJyYXkiLCJzdWNjZXNzIiwicHJvcCIsIkRhdGFUYWJsZSIsInJlbG9hZCIsImNhbmNlbGFyIiwidG9nZ2xlQ2xhc3MiLCJyZW1vdmVDbGFzcyIsImlzIiwidmVyaWZpY19jaGVja3NfcHJvZCIsIm51bSIsImVhY2giLCJpIiwicHJvZHVjdF9kYXRhIiwiY2xvc2VzdCIsImNvbnNvbGUiLCJsb2ciLCJpZCIsImRvY3VtZW50IiwicHJvZHVjdERldGFpbHMiLCJwYXJlbnQiLCJwcm9kdWN0IiwiaW1hZ2VkYXRhIiwidG9TdHJpbmciLCJKcXVlcnkiLCJyZXNwb25zZSIsInN0YXR1cyIsIm1lc3NhZ2UiLCJjYW5jZWxBY3Rpb24iLCJyZWFkeSIsInRhYmxlIiwicmVzcG9uc2l2ZSIsImZpeGVkSGVhZGVyIiwiaGVhZGVyIiwiZm9vdGVyIiwiZml4ZWRDb2x1bW5zIiwibGVmdCIsInJpZ2h0Iiwic2Nyb2xsQ29sbGFwc2UiLCJzY3JvbGxYIiwic2Nyb2xsWSIsImQiLCJmcm1fZGF0YSIsInNlcmlhbGl6ZUFycmF5Iiwia2V5IiwibmFtZSIsInZhbHVlIiwiY3JlYXRlZFJvdyIsInJvdyIsImRhdGFJbmRleCIsImFkZENsYXNzIiwiSlNPTiIsInN0cmluZ2lmeSIsIm9yZGVyIiwicmVuZGVyIiwibWV0YSIsIl9waWN0dXJlIiwicGljdHVyZSIsIl9waWN0dXJlcyIsInNwbGl0IiwiaXNfYWN0aXZlIiwiY2xhc3NfdGV4dCIsImNyZWF0ZWRfYXQiLCJ1cGRhdGVkX2F0IiwidXJsX2VkaXQiLCIkaHRtbCIsInN0eWxlIiwic2VsZWN0b3IiLCJldmVudCIsImRhdGVfcmFuZ2UiLCJyZXNldCJdLCJtYXBwaW5ncyI6IkFBQUEsQ0FBQyxZQUFXO0VBQ1IsSUFBSUEsR0FBRyxHQUFHLEVBQUU7RUFDWixJQUFJQyxRQUFRO0VBQ1osSUFBSUMsVUFBVTtFQUNkLElBQUlDLFVBQVUsR0FBRyxFQUFFO0VBQ25CQyxDQUFDLENBQUNDLFNBQVMsQ0FBQztJQUNSQyxPQUFPLEVBQUU7TUFDTCxjQUFjLEVBQUVGLENBQUMsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDRyxJQUFJLENBQUMsU0FBUztJQUMvRDtFQUNKLENBQUMsQ0FBQztFQUVGLFNBQVNDLFVBQVVBLENBQUNDLElBQUksRUFBRTtJQUN0QixPQUFPQSxJQUFJLENBQ05DLE9BQU8sQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQ3RCQSxPQUFPLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUNyQkEsT0FBTyxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FDckJBLE9BQU8sQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQ3ZCQSxPQUFPLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQztFQUNoQztFQUVBTixDQUFDLENBQUUsYUFBYyxDQUFDLENBQUNPLGVBQWUsQ0FBQztJQUMvQkMsT0FBTyxFQUFHQyxNQUFNLENB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O0lBQ2I7SUFDQXpCLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDMEMsU0FBUyxDQUFDLENBQUMsQ0FBQ1AsSUFBSSxDQUFDUSxNQUFNLENBQUMsQ0FBQztFQUN0RCxDQUFDLENBQUM7RUFFRjNDLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDa0IsRUFBRSxDQUFDLE9BQU8sRUFBRSxVQUFTVSxDQUFDLEVBQUM7SUFDekM1QixDQUFDLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzZHLEtBQUssQ0FBQyxDQUFDO0lBQ2pDN0csQ0FBQyxDQUFDLHFCQUFxQixDQUFDLENBQUMwQyxTQUFTLENBQUMsQ0FBQyxDQUFDUCxJQUFJLENBQUNRLE1BQU0sQ0FBQyxDQUFDO0VBQ3RELENBQUMsQ0FBQztBQUNOLENBQUMsRUFBRSxDQUFDIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL21vZHVsZXMvcHJvZHVjdC9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpIHtcbiAgICB2YXIgcXR5ID0gW107XG4gICAgdmFyIGh0bWx0ZXh0O1xuICAgIHZhciBzbGlkZXJ0ZXh0O1xuICAgIHZhciBwcm9kdWN0X2lkID0gW107XG4gICAgJC5hamF4U2V0dXAoe1xuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnWC1DU1JGLVRPS0VOJzogJCgnbWV0YVtuYW1lPVwiY3NyZi10b2tlblwiXScpLmF0dHIoJ2NvbnRlbnQnKVxuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICBmdW5jdGlvbiBlc2NhcGVIdG1sKHRleHQpIHtcbiAgICAgICAgcmV0dXJuIHRleHRcbiAgICAgICAgICAgIC5yZXBsYWNlKC8mL2csIFwiJmFtcDtcIilcbiAgICAgICAgICAgIC5yZXBsYWNlKC88L2csIFwiJmx0O1wiKVxuICAgICAgICAgICAgLnJlcGxhY2UoLz4vZywgXCImZ3Q7XCIpXG4gICAgICAgICAgICAucmVwbGFjZSgvXCIvZywgXCImcXVvdDtcIilcbiAgICAgICAgICAgIC5yZXBsYWNlKC8nL2csIFwiJiMwMzk7XCIpO1xuICAgIH1cblxuICAgICQoIFwiI2RhdGVfcmFuZ2VcIiApLmRhdGVyYW5nZXBpY2tlcih7XG4gICAgICAgIG1heERhdGUgOiBtb21lbnQoKS5lbmRPZigpLFxuICAgICAgICBzaG93QXBwbHlCdXR0b246IGZhbHNlLFxuICAgICAgICBhdXRvQXBwbHk6IHRydWUsXG4gICAgICAgIHNob3dJbnB1dHM6IGZhbHNlLFxuICAgICAgICBsb2NhbGU6IHtcbiAgICAgICAgICAgIGZvcm1hdDogJ0REL01NL1lZWVknXG4gICAgICAgIH0sXG4gICAgICAgIHRvZGF5SGlnaGxpZ2h0OiB0cnVlLFxuICAgICAgICBhdXRvVXBkYXRlSW5wdXQ6IGZhbHNlLFxuICAgIH0pO1xuXG4gICAgJCggXCIjZGF0ZV91cGRhdGVcIiApLmRhdGVyYW5nZXBpY2tlcih7XG4gICAgICAgIGxvY2FsZToge1xuICAgICAgICAgICAgZm9ybWF0OiAnREQvTU0vWVlZWSdcbiAgICAgICAgfSxcbiAgICAgICAgdG9kYXlIaWdobGlnaHQ6IHRydWUsXG4gICAgICAgIGF1dG9VcGRhdGVJbnB1dDogZmFsc2UsXG4gICAgfSk7XG5cbiAgICAkKCdpbnB1dFtuYW1lPVwiZGF0ZV9yYW5nZVwiXScpLm9uKCdhcHBseS5kYXRlcmFuZ2VwaWNrZXInLCBmdW5jdGlvbihldiwgcGlja2VyKSB7XG4gICAgICAgIHZhciB0eXBlX2ZlY2hhID0gJCgnLmZvcm0tc2VsZWN0JykudmFsKCk7XG4gICAgICAgIGlmKHR5cGVfZmVjaGE9PScnKXtcbiAgICAgICAgICAgICQuYWxlcnQoe1xuICAgICAgICAgICAgICAgIHRpdGxlOiAnRmlsdHJhIGRhdG9zJyxcbiAgICAgICAgICAgICAgICBjb250ZW50OidTZWxlY3Jpb25lIHVuIHRpcG8gZGUgZmVjaGEgYSBjb25zdWx0YXInLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICQodGhpcykudmFsKHBpY2tlci5zdGFydERhdGUuZm9ybWF0KCdERC9NTS9ZWVlZJykgKyAnIC0gJyArIHBpY2tlci5lbmREYXRlLmZvcm1hdCgnREQvTU0vWVlZWScpKTtcbiAgICB9KTtcblxuICAgICQoJ2lucHV0W25hbWU9XCJkYXRlX3JhbmdlXCJdJykub24oJ2NhbmNlbC5kYXRlcmFuZ2VwaWNrZXInLCBmdW5jdGlvbihldiwgcGlja2VyKSB7XG4gICAgICAgICQodGhpcykudmFsKCcnKTtcbiAgICB9KTtcblxuICAgICQoJ2lucHV0W25hbWU9XCJkYXRlX3VwZGF0ZVwiXScpLm9uKCdhcHBseS5kYXRlcmFuZ2VwaWNrZXInLCBmdW5jdGlvbihldiwgcGlja2VyKSB7XG4gICAgICAkKHRoaXMpLnZhbChwaWNrZXIuc3RhcnREYXRlLmZvcm1hdCgnREQvTU0vWVlZWScpICsgJyAtICcgKyBwaWNrZXIuZW5kRGF0ZS5mb3JtYXQoJ0REL01NL1lZWVknKSk7XG4gICAgfSk7XG5cbiAgICAkKCdpbnB1dFtuYW1lPVwiZGF0ZV91cGRhdGVcIl0nKS5vbignY2FuY2VsLmRhdGVyYW5nZXBpY2tlcicsIGZ1bmN0aW9uKGV2LCBwaWNrZXIpIHtcbiAgICAgICAgJCh0aGlzKS52YWwoJycpO1xuICAgIH0pO1xuXG4gICAgLy9wcm9kdWN0X2lkLmxlbmd0aCA9IDA7XG4gICAgJChcIi5kZWxldGVfYWxsX3Byb2RcIikub24oJ2NsaWNrJywgZnVuY3Rpb24oZSl7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgaWYocHJvZHVjdF9pZC5sZW5ndGgpIHtcbiAgICAgICAgICAgICQuY29uZmlybSh7XG4gICAgICAgICAgICAgICAgdGl0bGU6ICdFbGltaW5hciBwcm9kdWN0bycsXG4gICAgICAgICAgICAgICAgY29udGVudDogJ1JlYWxtZW50ZSBxdWllcmVzIGVsaW1pbmFyIGxvcyBwcm9kdWN0byBzZWxlY2lvbmFkb3M/JyxcbiAgICAgICAgICAgICAgICBidXR0b25zOiB7XG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZVVzZXI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6ICdTaSwgZWxpbWluYXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTonUFVUJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOidhcGkvcHJvZHVjdC9hbGwvZGVsZXRlYnlzZWxlY3Rpb24nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2R1Y3RJZEFycmF5OiBwcm9kdWN0X2lkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6ZnVuY3Rpb24oZGF0YSl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkLmFsZXJ0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ0VsaW1pbmF0IHByb2R1Y3RvcycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogJ3NlIGVsaW1pbm8gdG9kbyBsb3MgcHJvZHVjdG9zIHNlbGVjaW9uYWRvcyAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCBcIiNzZWxlY3RfYWxsXCIgKS5wcm9wKCdjaGVja2VkJywgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnI3Byb2R1Y3QtZGF0YS10YWJsZScpLkRhdGFUYWJsZSgpLmFqYXgucmVsb2FkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgY2FuY2VsYXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICQuYWxlcnQoJ2FjdGlvbiBpcyBjYW5jZWxlZCcpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAkLmFsZXJ0KHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ0VsaW1pbmF0IHByb2R1Y3RvcycsXG4gICAgICAgICAgICAgICAgY29udGVudDogJ1NlbGVjY2lvbmVzIGxvcyBwcm9kdWN0b3MgcXVlIGRlc2VhcyBlbGltaW5hcicsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgICQoXCIuYWN0aXZlX2FsbF9wcm9kXCIpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpe1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGlmKHByb2R1Y3RfaWQubGVuZ3RoKSB7XG4gICAgICAgICAgICAkLmNvbmZpcm0oe1xuICAgICAgICAgICAgICAgIHRpdGxlOiAnQWN0aXZhciBwcm9kdWN0bycsXG4gICAgICAgICAgICAgICAgY29udGVudDogJ1JlYWxtZW50ZSBxdWllcmVzIGFjdGl2YXIgbG9zIHByb2R1Y3RvcyBzZWxlY2lvbmFkb3M/JyxcbiAgICAgICAgICAgICAgICBidXR0b25zOiB7XG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZVVzZXI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6ICdTaSwgQWN0aXZhcicsXG4gICAgICAgICAgICAgICAgICAgICAgICBhY3Rpb246IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOidQVVQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6J2FwaS9wcm9kdWN0L2FsbC9hY3RpdmF0ZWJ5c2VsZWN0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTp7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9kdWN0SWRBcnJheTogcHJvZHVjdF9pZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOmZ1bmN0aW9uKGRhdGEpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJC5hbGVydCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdBY3RpdmFyIHByb2R1Y3RvcycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogJ3NlIGFjdGl2YWRvIHRvZG8gbG9zIHByb2R1Y3RvcyBzZWxlY2lvbmFkb3MgJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCggXCIjc2VsZWN0X2FsbFwiICkucHJvcCgnY2hlY2tlZCcsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNwcm9kdWN0LWRhdGEtdGFibGUnKS5EYXRhVGFibGUoKS5hamF4LnJlbG9hZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGNhbmNlbGFyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAkLmFsZXJ0KCdhY3Rpb24gaXMgY2FuY2VsZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICBcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAkLmFsZXJ0KHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ0FjdGl2YXIgcHJvZHVjdG9zJyxcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnU2VsZWNjaW9uZXMgbG9zIHByb2R1Y3RvcyBxdWUgZGVzZWFzIGFjdGl2YXInLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICAkKFwiLmRlc2FjdGl2ZV9hbGxfcHJvZFwiKS5vbignY2xpY2snLCBmdW5jdGlvbihlKXtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBpZihwcm9kdWN0X2lkLmxlbmd0aCkge1xuICAgICAgICAgICAgJC5jb25maXJtKHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ0Rlc2FjdGl2YXIgcHJvZHVjdG8nLFxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICdSZWFsbWVudGUgcXVpZXJlcyBkZXNhY3RpdmFyIGxvcyBwcm9kdWN0b3Mgc2VsZWNpb25hZG9zPycsXG4gICAgICAgICAgICAgICAgYnV0dG9uczoge1xuICAgICAgICAgICAgICAgICAgICBkZWxldGVVc2VyOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnU2ksIERlc2FjdGl2YXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTonUFVUJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOidhcGkvcHJvZHVjdC9hbGwvZGVhY3RpdmF0ZWJ5c2VsZWN0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTp7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9kdWN0SWRBcnJheTogcHJvZHVjdF9pZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOmZ1bmN0aW9uKGRhdGEpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJC5hbGVydCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdEZXNhY3RpdmEgcHJvZHVjdG9zJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiAnU2UgZGVzYWN0aXZvIHRvZG8gbG9zIHByb2R1Y3RvcyBzZWxlY2lvbmFkb3MgJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCggXCIjc2VsZWN0X2FsbFwiICkucHJvcCgnY2hlY2tlZCcsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNwcm9kdWN0LWRhdGEtdGFibGUnKS5EYXRhVGFibGUoKS5hamF4LnJlbG9hZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGNhbmNlbGFyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAkLmFsZXJ0KCdhY3Rpb24gaXMgY2FuY2VsZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgXG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgJC5hbGVydCh7XG4gICAgICAgICAgICAgICAgdGl0bGU6ICdEZXNhY3RpdmFyIHByb2R1Y3RvcycsXG4gICAgICAgICAgICAgICAgY29udGVudDogJ1NlbGVjY2lvbmVzIGxvcyBwcm9kdWN0b3MgcXVlIGRlc2VhcyBkZXNhY3RpdmFyJyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgJCgnLnNob3dfZm9ybV9zZWFyY2gnKS5vbignY2xpY2snLCBmdW5jdGlvbihlKXtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAkKCcuZm9ybV9zZWFyY2gnKS50b2dnbGVDbGFzcygnZm9ybV9zZWFyY2hfYWN0aXZlJyk7XG4gICAgfSk7XG5cbiAgICAkKCcuY2xvc2VfZm9ybScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpe1xuICAgICAgICAkKCcuZm9ybV9zZWFyY2gnKS5yZW1vdmVDbGFzcygnZm9ybV9zZWFyY2hfYWN0aXZlJyk7XG4gICAgfSk7XG5cbiAgICAkKCBcIiNwcm9kdWN0LWRhdGEtdGFibGUgI3NlbGVjdF9hbGxcIiApLm9uKFwiY2hhbmdlXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoJCh0aGlzKS5pcygnOmNoZWNrZWQnKSkge1xuICAgICAgICAgICAgJChcInRib2R5IGlucHV0W3R5cGU9J2NoZWNrYm94J11cIikucHJvcCgnY2hlY2tlZCcsIHRydWUpO1xuICAgICAgICB9IFxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICQoXCJ0Ym9keSBpbnB1dFt0eXBlPSdjaGVja2JveCddXCIpLnByb3AoJ2NoZWNrZWQnLCBmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgICAgcHJvZHVjdF9pZCA9IFtdO1xuICAgICAgICB2ZXJpZmljX2NoZWNrc19wcm9kKDApO1xuICAgIH0pO1xuXG4gICAgJCgnI3Byb2R1Y3QtZGF0YS10YWJsZScpLm9uKCdjbGljaycsIFwidGJvZHkgaW5wdXRbdHlwZT0nY2hlY2tib3gnXVwiLCBmdW5jdGlvbihlKSB7XG4gICAgICAgIGlmICghJCh0aGlzKS5pcyhcIjpjaGVja2VkXCIpKSB7IC8vSWYgdGhlIGNoZWNrYm94IGlzIGNoZWNrZWRcbiAgICAgICAgICAgIHByb2R1Y3RfaWQgPSBbXTtcbiAgICAgICAgfVxuICAgICAgICB2ZXJpZmljX2NoZWNrc19wcm9kKDEpO1xuICAgICAgICBcbiAgICB9KTtcblxuICAgIHZhciB2ZXJpZmljX2NoZWNrc19wcm9kID0gZnVuY3Rpb24obnVtKXtcbiAgICAgICAgJCgnOmNoZWNrYm94OmNoZWNrZWQnKS5lYWNoKGZ1bmN0aW9uKGkpe1xuICAgICAgICAgICAgaSs9bnVtO1xuICAgICAgICAgICAgaWYoaSl7XG4gICAgICAgICAgICAgICAgdmFyIHByb2R1Y3RfZGF0YSA9ICQodGhpcykuY2xvc2VzdCgndHInKS5kYXRhKCdwcm9kdWN0Jyk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocHJvZHVjdF9kYXRhKTtcbiAgICAgICAgICAgICAgICBwcm9kdWN0X2lkW2ktMV0gPSBwcm9kdWN0X2RhdGEuaWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAkKGRvY3VtZW50KS5vbihcImNsaWNrXCIsIFwidHIucHJvZHVjdC1saW5rIHRkOm5vdCg6Zmlyc3QtY2hpbGQsIDpsYXN0LWNoaWxkKVwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgcHJvZHVjdERldGFpbHMoICQodGhpcykucGFyZW50KCkuZGF0YSgncHJvZHVjdCcpLCAkKHRoaXMpLnBhcmVudCgpLmRhdGEoJ2ltYWdlZGF0YScpICk7ICAgICAgICBcbiAgICB9KTtcblxuICAgICQoZG9jdW1lbnQpLm9uKFwiY2xpY2tcIiwgXCIudmlld1wiLCBmdW5jdGlvbigpe1xuICAgICAgICB2YXIgcHJvZHVjdCA9ICQodGhpcykucGFyZW50KCkucGFyZW50KCkucGFyZW50KCkucGFyZW50KCkucGFyZW50KCkuZGF0YSgncHJvZHVjdCcpO1xuICAgICAgICB2YXIgaW1hZ2VkYXRhID0gJCh0aGlzKS5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5kYXRhKCdpbWFnZWRhdGEnKTtcbiAgICAgICAgcHJvZHVjdERldGFpbHMocHJvZHVjdCwgaW1hZ2VkYXRhKTtcbiAgICB9KTtcblxuICAgICQoJyNwcm9kdWN0LWRhdGEtdGFibGUnKS5vbignY2xpY2snLCAnLnJlbW92ZScsIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgdXJsID0gXCJhcGkvcHJvZHVjdC86aWQvZGVsZXRlXCI7XG4gICAgICAgIHZhciBpZCA9ICQodGhpcykuZGF0YSgnaWQnKS50b1N0cmluZygpO1xuICAgICAgICAvLyB1cmwgPSB1cmwuY29uY2F0KGlkKS5jb25jYXQoXCIvZGVsZXRlXCIpO1xuICAgICAgICB1cmwgPSB1cmwucmVwbGFjZSgnOmlkJywgaWQpO1xuICAgICAgICB2YXIgSnF1ZXJ5ID0gJC5KcXVlcnk7XG4gICAgICAgXG4gICAgICAgICQuY29uZmlybSh7XG4gICAgICAgICAgICB0aXRsZTogJ0VsaW1pbmFyIHByb2R1Y3RvPycsXG4gICAgICAgICAgICBjb250ZW50OiAnUmVhbG1lbnRlIHF1aWVyZXMgZWxpbWluYXIgZWwgcHJvZHVjdG8nLFxuICAgICAgICAgICAgLy8gYXV0b0Nsb3NlOiAnY2FuY2VsQWN0aW9ufDgwMDAnLFxuICAgICAgICAgICAgYnV0dG9uczoge1xuICAgICAgICAgICAgICAgIGRlbGV0ZVVzZXI6IHtcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogJ0VsaW1pbmFyIHByb2R1Y3RvJyxcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogdXJsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdERUxFVEUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQuYWxlcnQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IHJlc3BvbnNlLm1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjcHJvZHVjdC1kYXRhLXRhYmxlJykuRGF0YVRhYmxlKCkuYWpheC5yZWxvYWQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2FuY2VsQWN0aW9uOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vICQuYWxlcnQoJ2FjdGlvbiBpcyBjYW5jZWxlZCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICB9KTtcblxuXG4gICAgJCgnI3Byb2R1Y3QtZGF0YS10YWJsZScpLm9uKCdjbGljaycsICcuZGVzYWN0aXZhcicsIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgdXJsID0gXCJhcGkvcHJvZHVjdC86aWQvZGVhY3RpdmF0ZVwiO1xuICAgICAgICB2YXIgaWQgPSAkKHRoaXMpLmRhdGEoJ2lkJykudG9TdHJpbmcoKTtcbiAgICAgICAgdXJsID0gdXJsLnJlcGxhY2UoJzppZCcsIGlkKTtcbiAgICAgICAgdmFyIEpxdWVyeSA9ICQuSnF1ZXJ5O1xuICAgICAgIFxuICAgICAgICAkLmNvbmZpcm0oe1xuICAgICAgICAgICAgdGl0bGU6ICdEZXNhY3RpdmFyIHByb2R1Y3RvJyxcbiAgICAgICAgICAgIGNvbnRlbnQ6ICdSZWFsbWVudGUgcXVpZXJlcyBkZXNhY3RpdmFyIGVsIHByb2R1Y3RvJyxcbiAgICAgICAgICAgIGJ1dHRvbnM6IHtcbiAgICAgICAgICAgICAgICBkZWxldGVVc2VyOiB7XG4gICAgICAgICAgICAgICAgICAgIHRleHQ6ICdTaSwgZGVzYWN0aXZhcicsXG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IHVybCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnUFVUJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkLmFsZXJ0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiByZXNwb25zZS5zdGF0dXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiByZXNwb25zZS5tZXNzYWdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnI3Byb2R1Y3QtZGF0YS10YWJsZScpLkRhdGFUYWJsZSgpLmFqYXgucmVsb2FkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhbmNlbGFyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vICQuYWxlcnQoJ2FjdGlvbiBpcyBjYW5jZWxlZCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICB9KTtcblxuICAgICQoJyNwcm9kdWN0LWRhdGEtdGFibGUnKS5vbignY2xpY2snLCAnLmFjdGl2YXInLCBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHVybCA9IFwiYXBpL3Byb2R1Y3QvOmlkL2FjdGl2YXRlXCI7XG4gICAgICAgIHZhciBpZCA9ICQodGhpcykuZGF0YSgnaWQnKS50b1N0cmluZygpO1xuICAgICAgICB1cmwgPSB1cmwucmVwbGFjZSgnOmlkJywgaWQpO1xuICAgICAgICB2YXIgSnF1ZXJ5ID0gJC5KcXVlcnk7XG4gICAgICAgXG4gICAgICAgICQuY29uZmlybSh7XG4gICAgICAgICAgICB0aXRsZTogJ0FjdGl2YXIgcHJvZHVjdG8nLFxuICAgICAgICAgICAgY29udGVudDogJ1JlYWxtZW50ZSBxdWllcmVzIGFjdGl2YXIgZWwgcHJvZHVjdG8nLFxuICAgICAgICAgICAgYnV0dG9uczoge1xuICAgICAgICAgICAgICAgIGRlbGV0ZVVzZXI6IHtcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogJ1NpLCBhY3RpdmFyJyxcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogdXJsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdQVVQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQuYWxlcnQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IHJlc3BvbnNlLm1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjcHJvZHVjdC1kYXRhLXRhYmxlJykuRGF0YVRhYmxlKCkuYWpheC5yZWxvYWQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2FuY2VsYXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gJC5hbGVydCgnYWN0aW9uIGlzIGNhbmNlbGVkJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgIH0pO1xuXG4gICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciB0YWJsZSA9ICQoJyNwcm9kdWN0LWRhdGEtdGFibGUnKS5EYXRhVGFibGUoIHtcbiAgICAgICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXG4gICAgICAgICAgICBcInNlYXJjaGluZ1wiOiBmYWxzZSxcbiAgICAgICAgICAgIFwiYlByb2Nlc3NpbmdcIjogdHJ1ZSxcbiAgICAgICAgICAgIGZpeGVkSGVhZGVyOiB7XG4gICAgICAgICAgICAgICAgaGVhZGVyOiB0cnVlLFxuICAgICAgICAgICAgICAgIGZvb3RlcjogdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZpeGVkQ29sdW1uczoge1xuICAgICAgICAgICAgICAgIGxlZnQ6IDEsXG4gICAgICAgICAgICAgICAgcmlnaHQ6IDFcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzY3JvbGxDb2xsYXBzZTogdHJ1ZSxcbiAgICAgICAgICAgIHNjcm9sbFg6IHRydWUsXG4gICAgICAgICAgICBzY3JvbGxZOiAzMDAsXG4gICAgICAgICAgICBcInByb2Nlc3NpbmdcIjogdHJ1ZSxcbiAgICAgICAgICAgIFwic2VydmVyU2lkZVwiOiB0cnVlLFxuICAgICAgICAgICAgXCJhamF4XCI6e1xuICAgICAgICAgICAgICAgIHVybDpcImFwaS9wcm9kdWN0L2xpc3RcIixcbiAgICAgICAgICAgICAgICBcImRhdGFcIjogZnVuY3Rpb24oZCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZnJtX2RhdGEgPSAkKCdmb3JtI2Zyb21fc2VhcmNoX3Byb2QnKS5zZXJpYWxpemVBcnJheSgpO1xuICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4gZnJtX2RhdGE7XG4gICAgICAgICAgICAgICAgICAgICQuZWFjaChmcm1fZGF0YSwgZnVuY3Rpb24oa2V5LCB2YWwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRbdmFsLm5hbWVdID0gdmFsLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHR5cGU6XCJHRVRcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiY3JlYXRlZFJvd1wiOiBmdW5jdGlvbiggcm93LCBkYXRhLCBkYXRhSW5kZXggKSB7XG4gICAgICAgICAgICAgICAgJChyb3cpLmFkZENsYXNzKCdwcm9kdWN0LWxpbmsnKTtcbiAgICAgICAgICAgICAgICAkKHJvdykuYXR0cignZGF0YS1wcm9kdWN0JywgSlNPTi5zdHJpbmdpZnkoZGF0YSkpO1xuICAgICAgICAgICAgICAgIC8vICQocm93KS5hdHRyKCdkYXRhLXByb2R1Y3QnLCBkYXRhWydwcm9kdWN0J10pO1xuICAgICAgICAgICAgICAgIC8vICQocm93KS5hdHRyKCdkYXRhLWltYWdlZGF0YScsIGRhdGFbJ2ltYWdlZGF0YSddKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImNvbHVtbnNcIjogW1xuICAgICAgICAgICAgICAgIHtcImRhdGFcIjogXCJpZFwifSxcbiAgICAgICAgICAgICAgICB7XCJkYXRhXCI6IFwicGljdHVyZVwifSxcbiAgICAgICAgICAgICAgICB7XCJkYXRhXCI6IFwibmFtZVwifSxcbiAgICAgICAgICAgICAgICB7XCJkYXRhXCI6IFwiY29kZVwifSxcbiAgICAgICAgICAgICAgICB7XCJkYXRhXCI6IFwiYnJhbmRfbmFtZVwifSxcbiAgICAgICAgICAgICAgICB7XCJkYXRhXCI6IFwiY2F0ZWdvcnlfbmFtZVwifSxcbiAgICAgICAgICAgICAgICB7XCJkYXRhXCI6IFwicXR5XCJ9LFxuICAgICAgICAgICAgICAgIHtcImRhdGFcIjogXCJ1bml0X25hbWVcIn0sXG4gICAgICAgICAgICAgICAge1wiZGF0YVwiOiBcInByaWNlXCJ9LFxuICAgICAgICAgICAgICAgIHtcImRhdGFcIjogXCJzdGF0dXNcIn0sXG4gICAgICAgICAgICAgICAge1wiZGF0YVwiOiBcImNyZWF0ZWRfYXRcIn0sXG4gICAgICAgICAgICAgICAge1wiZGF0YVwiOiBcInVwZGF0ZWRfYXRcIn0sXG4gICAgICAgICAgICAgICAgLy97XCJkYXRhXCI6IFwib3B0aW9uc1wifSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAnbGFuZ3VhZ2UnOiB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJ2xlbmd0aE1lbnUnOiAnX01FTlVfJyxcbiAgICAgICAgICAgICAgICBcImluZm9cIjogICAgICAnPHNtYWxsPiBfU1RBUlRfIC0gX0VORF8gKF9UT1RBTF8pPC9zbWFsbD4nLFxuICAgICAgICAgICAgICAgIFwic2VhcmNoXCI6ICAne3t0cmFucyhcImZpbGUuU2VhcmNoXCIpfX0nLFxuICAgICAgICAgICAgICAgICdwYWdpbmF0ZSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJ3ByZXZpb3VzJzogJzxpIGNsYXNzPVwiZmEgZmEtYW5nbGUtbGVmdFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvaT4nLFxuICAgICAgICAgICAgICAgICAgICAnbmV4dCc6ICc8aSBjbGFzcz1cImZhIGZhLWFuZ2xlLXJpZ2h0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPidcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb3JkZXI6W1snMicsICdhc2MnXV0sXG4gICAgICAgICAgICAnY29sdW1uRGVmcyc6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIFwib3JkZXJhYmxlXCI6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAndGFyZ2V0cyc6IFswLCAxLCAxMl1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgJ3JlbmRlcic6IGZ1bmN0aW9uKGRhdGEsIHR5cGUsIHJvdywgbWV0YSl7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZih0eXBlID09PSAnZGlzcGxheScpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSAnPGRpdiBjbGFzcz1cImNoZWNrYm94XCI+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIGNsYXNzPVwiZHQtY2hlY2tib3hlc1wiPjxsYWJlbD48L2xhYmVsPjwvZGl2Pic7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICdjaGVja2JveGVzJzoge1xuICAgICAgICAgICAgICAgICAgICAgICAnc2VsZWN0Um93JzogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgJ3NlbGVjdEFsbFJlbmRlcic6ICc8ZGl2IGNsYXNzPVwiY2hlY2tib3hcIj48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgY2xhc3M9XCJkdC1jaGVja2JveGVzXCI+PGxhYmVsPjwvbGFiZWw+PC9kaXY+J1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAndGFyZ2V0cyc6IFswXVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAndGFyZ2V0cycgOiBbMV0sXG4gICAgICAgICAgICAgICAgICAgICdyZW5kZXInIDogZnVuY3Rpb24oZGF0YSwgdHlwZSwgcm93LCBtZXRhKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBfcGljdHVyZSA9ICdhdmFyYXQucG5nJztcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHJvdy5waWN0dXJlICE9IG51bGwpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBfcGljdHVyZXMgPSByb3cucGljdHVyZS5zcGxpdChcIixcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3BpY3R1cmUgPSBfcGljdHVyZXNbX3BpY3R1cmVzLmxlbmd0aCAtIDFdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9waWN0dXJlID0gZXNjYXBlSHRtbChfcGljdHVyZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnPGltZyBzcmM9XCJwdWJsaWMvaW1hZ2VzL3Byb2R1Y3QvJytfcGljdHVyZSsnXCIgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjgwXCI+Jzs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgJ3RhcmdldHMnOls5XSxcbiAgICAgICAgICAgICAgICAgICAgJ3JlbmRlcicgOiBmdW5jdGlvbihkYXRhLCB0eXBlLCByb3csIG1ldGEpe1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9yZXR1cm4gcm93LmlzX2FjdGl2ZSA9PSAxID8gJ0FjdGl2bycgOiAnRGVzYWN0aXZhZG8nO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXNfYWN0aXZlID0gcm93LmlzX2FjdGl2ZSA9PSAxID8gJ0FjdGl2bycgOiAnRGVzYWN0aXZhZG8nO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNsYXNzX3RleHQgPSBcInRleHQtc3VjY2Vzc1wiO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJvdy5pc19hY3RpdmUgPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzX3RleHQgPSBcInRleHQtd2FybmluZ1wiO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSA9ICc8c3BhbiBjbGFzcz1cIicrIGNsYXNzX3RleHQgKydcIj4nKyBpc19hY3RpdmUgKyc8L3NwYW4+JztcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICd0YXJnZXRzJzpbMTBdLFxuICAgICAgICAgICAgICAgICAgICAncmVuZGVyJyA6IGZ1bmN0aW9uKGRhdGEsIHR5cGUsIHJvdywgbWV0YSl7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocm93LmNyZWF0ZWRfYXQgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBtb21lbnQocm93LmNyZWF0ZWRfYXQpLmZvcm1hdCgnREQvTU0vWVlZWSBISDptbTpzcycpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICd0YXJnZXRzJzpbMTFdLFxuICAgICAgICAgICAgICAgICAgICAncmVuZGVyJyA6IGZ1bmN0aW9uKGRhdGEsIHR5cGUsIHJvdywgbWV0YSl7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocm93LnVwZGF0ZWRfYXQgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBtb21lbnQocm93LnVwZGF0ZWRfYXQpLmZvcm1hdCgnREQvTU0vWVlZWSBISDptbTpzcycpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICd0YXJnZXRzJzogWzEyXSxcbiAgICAgICAgICAgICAgICAgICAgJ3JlbmRlcicgOiBmdW5jdGlvbihkYXRhLCB0eXBlLCByb3csIG1ldGEpe1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVybF9lZGl0ID0gXCJwcm9kdWN0LzppZC9lZGl0XCI7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cmxfZWRpdCA9IHVybF9lZGl0LnJlcGxhY2UoJzppZCcsIHJvdy5pZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgJGh0bWwgPSAgJzxhIGhyZWY9XCInK3VybF9lZGl0KydcIiBjbGFzcz1cImJ0biBiZy1zdWNjZXNzIGJ0bi1zbVwiIGRhdGEtaWQ9XCInK3Jvdy5pZCsnXCI+PGkgY2xhc3M9XCJmYSBmYS1lZGl0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPjwvYT4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgJGh0bWwgKz0gICc8YSBjbGFzcz1cImJ0biBiZy1kYW5nZXIgbS0xIHJlbW92ZSBidG4tc21cIiBkYXRhLWlkPVwiJytyb3cuaWQrJ1wiPjxpIGNsYXNzPVwiZmEgZmEtdHJhc2hcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+PC9hPic7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZihyb3cuaXNfYWN0aXZlID09IDEpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRodG1sICs9ICAnPGEgY2xhc3M9XCJidG4gYmctZ3JleSBtLTEgZGVzYWN0aXZhciBidG4tc21cIiBkYXRhLWlkPVwiJytyb3cuaWQrJ1wiPjxpIGNsYXNzPVwiZmEgZmEtdG9nZ2xlLW9uXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPjwvYT4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJGh0bWwgKz0gICc8YSBjbGFzcz1cImJ0biBiZy1ncmV5IG0tMSBhY3RpdmFyIGJ0bi1zbVwiIGRhdGEtaWQ9XCInK3Jvdy5pZCsnXCI+PGkgY2xhc3M9XCJmYSBmYS10b2dnbGUtb2ZmXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9pPjwvYT4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8kaHRtbCArPSAnPGEgY2xhc3M9XCJidG4gYnMtaW5mbyBtLTEgdmlld1wiPjxpIGNsYXNzPVwiZmEgZmEtaW5mby1jaXJjbGVcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+PC9hPic7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJGh0bWw7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgJ3NlbGVjdCc6IHsgc3R5bGU6ICdtdWx0aScsIHNlbGVjdG9yOiAndGQ6Zmlyc3QtY2hpbGQnfSxcbiAgICAgICAgICAgICdsZW5ndGhNZW51JzogW1sxMCwgMjUsIDUwLCAtMV0sIFsxMCwgMjUsIDUwLCBcIkFsbFwiXV0sXG4gICAgICAgICAgICBcbiAgICAgICAgfSApO1xuXG4gICAgfSApO1xuXG5cbiAgICAkKCBcIiNmcm9tX3NlYXJjaF9wcm9kXCIgKS5vbiggXCJzdWJtaXRcIiwgZnVuY3Rpb24oIGV2ZW50ICkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB2YXIgZGF0ZV9yYW5nZSA9ICQoJyNkYXRlX3JhbmdlJykudmFsKCk7XG4gICAgICAgIHZhciB0eXBlX2ZlY2hhID0gJCgnLnByb2R1Y3Qtc2VsZWN0LWRhdGUnKS52YWwoKTtcbiAgICAgICAgY29uc29sZS5sb2codHlwZV9mZWNoYSk7XG4gICAgICAgIGlmKHR5cGVfZmVjaGE9PScnICYmIGRhdGVfcmFuZ2UgIT09ICcnKXtcbiAgICAgICAgICAgICQuYWxlcnQoe1xuICAgICAgICAgICAgICAgIHRpdGxlOiAnRmlsdHJhIGRhdG9zJyxcbiAgICAgICAgICAgICAgICBjb250ZW50OidTZWxlY2lvbmUgdW4gdGlwbyBkZSBmZWNoYSBhIGNvbnN1bHRhcicsXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBpZihkYXRlX3JhbmdlID09ICcnICYmIHR5cGVfZmVjaGEgIT09ICcnKXtcbiAgICAgICAgICAgICQuYWxlcnQoe1xuICAgICAgICAgICAgICAgIHRpdGxlOiAnRmlsdHJhIGRhdG9zJyxcbiAgICAgICAgICAgICAgICBjb250ZW50OidTZWxlY2lvbmUgZWwgcmFuZ28gZGUgZmVjaGEnLFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuICAgICAgICAkKCcjcHJvZHVjdC1kYXRhLXRhYmxlJykuRGF0YVRhYmxlKCkuYWpheC5yZWxvYWQoKTtcbiAgICB9KTtcblxuICAgICQoJy5jbGVhcl9mb3JtX3Byb2QnKS5vbignY2xpY2snLCBmdW5jdGlvbihlKXtcbiAgICAgICAgJCgnI2Zyb21fc2VhcmNoX3Byb2QnKVswXS5yZXNldCgpO1xuICAgICAgICAkKCcjcHJvZHVjdC1kYXRhLXRhYmxlJykuRGF0YVRhYmxlKCkuYWpheC5yZWxvYWQoKTtcbiAgICB9KTtcbn0pKCk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/modules/product/index.js\n");

/***/ }),

/***/ 16:
/*!*****************************************************!*\
  !*** multi ./resources/js/modules/product/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /usr/local/var/www/practica/resources/js/modules/product/index.js */"./resources/js/modules/product/index.js");


/***/ })

/******/ });