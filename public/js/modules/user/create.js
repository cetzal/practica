/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 22);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/modules/user/create.js":
/*!*********************************************!*\
  !*** ./resources/js/modules/user/create.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function () {\n  var url_path_user = 'api/user';\n  $('form#new_user').validate({\n    rules: {\n      email: {\n        required: true,\n        email: true\n      },\n      password: {\n        required: true\n      }\n    },\n    highlight: function highlight(input) {\n      $(input).addClass('is-invalid');\n    },\n    unhighlight: function unhighlight(input) {\n      $(input).removeClass('is-invalid');\n    },\n    errorElement: 'span',\n    errorPlacement: function errorPlacement(error, element) {\n      error.addClass('invalid-feedback');\n      element.closest('.form-group').append(error);\n    },\n    messages: {\n      name: 'name is requerid',\n      last_name: 'last name is requerid',\n      password: {\n        required: \"password is requerid\"\n      },\n      email: {\n        required: \"We need your email address to contact you\",\n        email: \"Your email address must be in the format of name@domain.com\"\n      }\n    }\n  });\n  $('#btn-password').bind(\"keyup\", function () {\n    ValidatePassword('#btn-password', '#new_user');\n  });\n  var url_user = url_path_user + '';\n  // url_user = url_user.replace(':id', up_user_id);\n  // console.log(up_user_id);\n  var myDropzone1 = new Dropzone('div#imageUploadNewUser', {\n    addRemoveLinks: true,\n    autoProcessQueue: false,\n    uploadMultiple: true,\n    parallelUploads: 1,\n    maxFilesize: 12,\n    paramName: 'image',\n    clickable: true,\n    method: 'POST',\n    url: url_user,\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    },\n    renameFile: function renameFile(file) {\n      var dt = new Date();\n      var time = dt.getTime();\n      return time + file.name;\n    },\n    acceptedFiles: \".jpeg,.jpg,.png,.gif\",\n    init: function init() {\n      var myDropzone = this;\n      $('#submit-btn-create').on(\"click\", function (e) {\n        e.preventDefault();\n        if ($(\"#new_user\").valid() && checked_validpass('#btn-password', '#new_user')) {\n          tinyMCE.triggerSave();\n          if (myDropzone.getAcceptedFiles().length) {\n            myDropzone.processQueue();\n          } else {\n            $.ajax({\n              type: 'POST',\n              url: url_user,\n              data: $(\"#new_user\").serialize(),\n              success: function success(response) {\n                $(\"input[name='id']\").val('');\n                $(\"input[name='name']\").val('');\n                $(\"input[name='last_name']\").val('');\n                $(\"input[name='email']\").val('');\n                $('.btn-close-modal').trigger('click');\n                $.confirm({\n                  title: 'Crear usuario',\n                  content: 'El usuario se ha creado con exito',\n                  buttons: {\n                    ok: function ok() {\n                      console.log('creacion de usuario cargo la tabla');\n                      $('#user-table').DataTable().ajax.reload();\n                    }\n                  }\n                });\n              },\n              error: function error(response) {\n                if (response.status == 422) {\n                  //toastError(err.responseJSON.message);\n                  var details = response.responseJSON.errors;\n                  var content = '';\n                  Object.keys(details).forEach(function (field) {\n                    content += formatErrorUsingClassesAndPopover(field, details[field]);\n                  });\n                  $.alert({\n                    title: 'Error',\n                    content: content\n                  });\n                }\n              }\n            });\n          }\n        }\n      });\n      this.on('sending', function (file, xhr, formData) {\n        // Append all form inputs to the formData Dropzone will POST\n        var data = $(\"#new_user\").serializeArray();\n        $.each(data, function (key, el) {\n          formData.append(el.name, el.value);\n        });\n      });\n    },\n    error: function error(file, response) {\n      if (response.status == 422) {\n        //toastError(err.responseJSON.message);\n        var details = response.responseJSON.errors;\n        var content = '';\n        Object.keys(details).forEach(function (field) {\n          content += formatErrorUsingClassesAndPopover(field, details[field]);\n        });\n        $.alert({\n          title: 'Error',\n          content: content\n        });\n      }\n    },\n    successmultiple: function successmultiple(file, response) {\n      $.confirm({\n        title: 'Agregar usuario',\n        content: 'El usuario se ha creado con exito'\n      });\n      //location.href = '../user';\n      //console.log(file, response);\n    },\n    completemultiple: function completemultiple(file, response) {\n      console.log(file, response, \"completemultiple\");\n    },\n    reset: function reset() {\n      console.log(\"resetFiles\");\n      this.removeAllFiles(true);\n    }\n  });\n  $(\".dropzone\").sortable({\n    items: '.dz-preview',\n    cursor: 'grab',\n    opacity: 0.5,\n    containment: '.dropzone',\n    distance: 20,\n    tolerance: 'pointer',\n    stop: function stop() {\n      var queue = myDropzone1.getAcceptedFiles();\n      newQueue = [];\n      $('#imageUpload .dz-preview .dz-filename [data-dz-name]').each(function (count, el) {\n        var name = el.innerHTML;\n        queue.forEach(function (file) {\n          if (file.name === name) {\n            newQueue.push(file);\n          }\n        });\n      });\n      myDropzone1.files = newQueue;\n    }\n  });\n  /*Actual validation function*/\n  function ValidatePassword(input, form) {\n    if (input == '#btn-password') {\n      $('div.securty_pass_c').show();\n    } else {\n      $('div.securty_pass_u').show();\n    }\n    /*Array of rules and the information target*/\n    var rules = [{\n      Pattern: \"[A-Z]\",\n      Target: \"UpperCase\"\n    }, {\n      Pattern: \"[a-z]\",\n      Target: \"LowerCase\"\n    }, {\n      Pattern: \"[0-9]\",\n      Target: \"Numbers\"\n    }, {\n      Pattern: \"[!@@#$%^&*]\",\n      Target: \"Symbols\"\n    }];\n\n    //Just grab the password once\n    var password = $(input).val();\n    var form_ = $(form);\n\n    /*Length Check, add and remove class could be chained*/\n    /*I've left them seperate here so you can see what is going on */\n    /*Note the Ternary operators ? : to select the classes*/\n    form_.find(\"#Length\").removeClass(password.length > 7 ? \"glyphicon-remove\" : \"glyphicon-ok\");\n    form_.find(\"#Length\").addClass(password.length > 7 ? \"glyphicon-ok\" : \"glyphicon-remove\");\n\n    /*Iterate our remaining rules. The logic is the same as for Length*/\n    for (var i = 0; i < rules.length; i++) {\n      var match_pass = new RegExp(rules[i].Pattern).test(password);\n      var remove_class = match_pass ? \"glyphicon-remove\" : \"glyphicon-ok\";\n      var add_class = match_pass ? \"glyphicon-ok\" : \"glyphicon-remove\";\n      var element = form_.find(\"#\" + rules[i].Target);\n      $(element).removeClass(remove_class);\n      $(element).addClass(add_class);\n    }\n  }\n  function checked_validpass(input, form) {\n    $(input).addClass('is-invalid');\n    $(input).attr('aria-invalid', true);\n    if (input !== '#btn-password') {\n      var password = $(input).val();\n      if (password.length == 0) {\n        $('div.securty_pass_u').hide();\n        $(input).removeClass('is-invalid');\n        $(input).attr('aria-invalid', false);\n        return true;\n      }\n    }\n    var form_ = $(form);\n    if (form_.find(\"#Length\").hasClass('glyphicon-remove')) {\n      return false;\n    }\n    if (form_.find(\"#UpperCase\").hasClass('glyphicon-remove')) {\n      return false;\n    }\n    if (form_.find(\"#LowerCase\").hasClass('glyphicon-remove')) {\n      return false;\n    }\n    if (form_.find(\"#Numbers\").hasClass('glyphicon-remove')) {\n      return false;\n    }\n    if (form_.find(\"#Symbols\").hasClass('glyphicon-remove')) {\n      return false;\n    }\n    $(input).removeClass('is-invalid');\n    $(input).attr('aria-invalid', false);\n    return true;\n  }\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/modules/user/create.js\n");

/***/ }),

/***/ 22:
/*!***************************************************!*\
  !*** multi ./resources/js/modules/user/create.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /usr/local/var/www/practica/resources/js/modules/user/create.js */"./resources/js/modules/user/create.js");


/***/ })

/******/ });