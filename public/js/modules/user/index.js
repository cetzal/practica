/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 23);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/modules/user/index.js":
/*!********************************************!*\
  !*** ./resources/js/modules/user/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n(function () {\n  var token = localStorage.getItem('token');\n  var user_id = [];\n  var url_path_user = 'api/user';\n  $('div.securty_pass_c').hide();\n  $('div.securty_pass_u').hide();\n  var up_user_id = $(\"input[name='id']\").val();\n  $.ajaxSetup({\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    }\n  });\n  $(\"#date_range\").daterangepicker(_defineProperty(_defineProperty(_defineProperty(_defineProperty({\n    maxDate: moment().endOf(),\n    showApplyButton: false,\n    autoApply: true,\n    showInputs: false\n  }, \"maxDate\", \"0\"), \"locale\", {\n    format: 'DD/MM/YYYY',\n    \"applyLabel\": \"Aplicar\",\n    \"cancelLabel\": \"Cancelar\"\n  }), \"todayHighlight\", true), \"autoUpdateInput\", false));\n  $(\"#date_update\").daterangepicker({\n    locale: {\n      format: 'DD/MM/YYYY'\n    },\n    todayHighlight: true,\n    autoUpdateInput: false\n  });\n  $('input[name=\"date_range\"]').on('apply.daterangepicker', function (ev, picker) {\n    $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY'));\n  });\n  $('input[name=\"date_range\"]').on('cancel.daterangepicker', function (ev, picker) {\n    $(this).val('');\n  });\n  $('input[name=\"date_update\"]').on('apply.daterangepicker', function (ev, picker) {\n    $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY'));\n  });\n  $('input[name=\"date_update\"]').on('cancel.daterangepicker', function (ev, picker) {\n    $(this).val('');\n  });\n  function escapeHtml(text) {\n    return text.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n  }\n\n  //dropzone portion\n  Dropzone.autoDiscover = false;\n  $(\".delete_all_user\").on('click', function (e) {\n    e.preventDefault();\n    if (user_id.length) {\n      $.confirm({\n        title: 'Eliminar usuarios',\n        content: 'Realmente quieres eliminar los usarios selecionados',\n        buttons: {\n          deleteUser: {\n            text: 'Si, eliminar',\n            action: function action() {\n              $.ajax({\n                type: 'PUT',\n                url: 'api/user/all/deletebyselection',\n                data: {\n                  userIdArray: user_id\n                },\n                success: function success(data) {\n                  user_id = [];\n                  $.alert({\n                    title: 'Eliminar usuarios seleccionados',\n                    content: 'se elimino todo los usuarios selecionados '\n                  });\n                  $(\"#select_all\").prop('checked', false);\n                  $('#user-table').DataTable().ajax.reload();\n                }\n              });\n            }\n          },\n          cancelar: function cancelar() {\n            // $.alert('action is canceled');\n          }\n        }\n      });\n    } else {\n      $.alert({\n        title: 'Eliminar usuario',\n        content: 'Selecciones los usuario que deseas eliminar'\n      });\n    }\n  });\n  $(\".active_all_user\").on('click', function (e) {\n    e.preventDefault();\n    if (user_id.length) {\n      $.confirm({\n        title: 'Activar usuarios',\n        content: 'Realmente quieres Activar los usarios selecionados',\n        buttons: {\n          deleteUser: {\n            text: 'Si, activar',\n            action: function action() {\n              $.ajax({\n                type: 'PUT',\n                url: 'api/user/all/activatebyselection',\n                data: {\n                  userIdArray: user_id\n                },\n                success: function success(data) {\n                  $.alert({\n                    title: 'Activar usuario',\n                    content: 'se activado todo los usuario selecionados '\n                  });\n                  user_id = [];\n                  $(\"#select_all\").prop('checked', false);\n                  $('#user-table').DataTable().ajax.reload();\n                }\n              });\n            }\n          },\n          cancelar: function cancelar() {\n            // $.alert('action is canceled');\n          }\n        }\n      });\n    } else {\n      $.alert({\n        title: 'Activar usuario',\n        content: 'Selecciones los usuario que deseas activar'\n      });\n    }\n  });\n  $(\".desactive_all_user\").on('click', function (e) {\n    e.preventDefault();\n    if (user_id.length) {\n      $.confirm({\n        title: 'Desactivar usuarios',\n        content: 'Realmente quieres desactivar los usarios selecionados',\n        buttons: {\n          deleteUser: {\n            text: 'Si, activar',\n            action: function action() {\n              $.ajax({\n                type: 'PUT',\n                url: 'api/user/all/deactivatebyselection',\n                data: {\n                  userIdArray: user_id\n                },\n                success: function success(data) {\n                  user_id = [];\n                  $.alert({\n                    title: 'Desactiva usuario',\n                    content: 'Se desactivo todo los usuario selecionados '\n                  });\n                  $(\"#select_all\").prop('checked', false);\n                  $('#user-table').DataTable().ajax.reload();\n                }\n              });\n            }\n          },\n          cancelar: function cancelar() {\n            // $.alert('action is canceled');\n          }\n        }\n      });\n    } else {\n      $.alert({\n        title: 'Desactivar usuario',\n        content: 'Selecciones los usuario que deseas desactivar'\n      });\n    }\n  });\n  $('.show_form_search').on('click', function (e) {\n    e.preventDefault();\n    $('.form_search').toggleClass('form_search_active');\n  });\n  $('.close_form').on('click', function (e) {\n    $('.form_search').removeClass('form_search_active');\n  });\n  var table = $('#user-table').DataTable({\n    responsive: true,\n    autoWidth: true,\n    serverSide: true,\n    \"searching\": false,\n    \"bProcessing\": true,\n    //\"ajax\" : \"\",\n    \"ajax\": {\n      \"url\": url_path_user + '/list',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      },\n      \"data\": function data(d) {\n        var frm_data = $('form#from_search').serializeArray();\n        // return frm_data;\n        $.each(frm_data, function (key, val) {\n          d[val.name] = val.value;\n        });\n      }\n    },\n    \"createdRow\": function createdRow(row, data, dataIndex) {\n      $(row).addClass('user-link');\n      $(row).attr('data-user', JSON.stringify(data));\n    },\n    'columns': [{\n      data: \"text\",\n      \"render\": function render(data, type, full, meta) {\n        return '<div class=\"checkbox\"><input type=\"checkbox\" class=\"dt-checkboxes checkbox_user\"><label></label></div>';\n      }\n    }, {\n      data: 'name'\n    }, {\n      data: 'last_name'\n    }, {\n      data: 'picture',\n      \"render\": function render(data, type, row, meta) {\n        var _picture = 'avarat.png';\n        if (row.picture != null) {\n          var _pictures = row.picture.split(\",\");\n          _picture = _pictures[_pictures.length - 1];\n          _picture = escapeHtml(_picture);\n        }\n        return '<img src=\"public/images/user/' + _picture + '\" height=\"80\" width=\"80\">';\n      }\n    }, {\n      data: 'email'\n    }, {\n      data: 'role_name',\n      \"render\": function render(data, type, full, meta) {\n        return full.role_name;\n        // return full.role_id == 1 ? 'ADMIN' : 'CUSTOMER';\n      }\n    }, {\n      data: 'status',\n      \"render\": function render(data, type, full, meta) {\n        var is_active = full.is_active == 1 ? 'Activo' : 'Desactivado';\n        var class_text = \"text-success\";\n        if (full.is_active == 0) {\n          class_text = \"text-warning\";\n        }\n        data = '<span class=\"' + class_text + '\">' + is_active + '</span>';\n        return data;\n      }\n    }],\n    \"columnDefs\": [{\n      \"orderable\": false,\n      'targets': [0, 3]\n    }, {\n      targets: [1],\n      className: \"text-center\"\n    }, {\n      targets: [0, 1, 2, 3],\n      searchable: false\n    }, {\n      targets: [7],\n      render: function render(data, type, row, meta) {\n        return row.user_parent_name;\n      }\n    }, {\n      targets: [8],\n      render: function render(data, type, row, meta) {\n        if (row.created_at == null) {\n          return '';\n        }\n        return moment(row.created_at).format('DD/MM/YYYY HH:mm:ss');\n        DD;\n      }\n    }, {\n      targets: [9],\n      render: function render(data, type, row, meta) {\n        if (row.updated_at == null) {\n          return '';\n        }\n        return moment(row.updated_at).format('DD/MM/YYYY HH:mm:ss');\n      }\n    }, {\n      targets: [10],\n      \"render\": function render(data, type, row, meta) {\n        var $html = '<button type=\"button\" class=\"open-EditbrandDialog btn bg-success\" data-id=\"' + row.id + '\" data-bs-toggle=\"modal\" data-bs-target=\"#editModal\"><i class=\"fa fa-edit\" aria-hidden=\"true\"></i></button>';\n        $html += '<a class=\"btn bg-danger m-1 remove\" data-id=\"' + row.id + '\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></a>';\n        if (row.is_active == 1) {\n          $html += '<a class=\"btn bg-grey m-1 desactivar btn-sm\" data-id=\"' + row.id + '\"><i class=\"fa fa-toggle-on\" aria-hidden=\"true\"></i></a>';\n        } else {\n          $html += '<a class=\"btn bg-grey m-1 activar btn-sm\" data-id=\"' + row.id + '\"><i class=\"fa fa-toggle-off\" aria-hidden=\"true\"></i></a>';\n        }\n        // if(row.is_active == 1){\n        //     $html +=  '<a class=\"btn bg-grey m-1 desactivar\" data-id=\"'+row.id+'\"><i class=\"icon-reset\"></i> Desactivar</a>';\n        // }else{\n        //     $html +=  '<a class=\"btn bg-grey m-1 activar\" data-id=\"'+row.id+'\"><i class=\"icon-reset\"></i> Activar</a>';\n        // }\n        return $html;\n      }\n    }],\n    \"order\": [],\n    'language': {\n      'lengthMenu': '_MENU_',\n      \"info\": '<small> _START_ - _END_ (_TOTAL_)</small>',\n      \"search\": '',\n      'paginate': {\n        'previous': '<i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>',\n        'next': '<i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>'\n      }\n    }\n  });\n  $(\"#from_search\").on(\"submit\", function (event) {\n    event.preventDefault();\n    var date_range = $('#date_range').val();\n    var type_fecha = $('.user-select-date').val();\n    if (type_fecha == '' && date_range !== '') {\n      $.alert({\n        title: 'Filtra datos',\n        content: 'Selecione un tipo de fecha a consultar'\n      });\n      return '';\n    }\n    if (date_range == '' && type_fecha !== '') {\n      $.alert({\n        title: 'Filtra datos',\n        content: 'Selecione el rango de fecha'\n      });\n      return '';\n    }\n    table.ajax.reload();\n  });\n  $('.clear_form_user').on('click', function (e) {\n    $('#from_search')[0].reset();\n    table.ajax.reload();\n  });\n  $('#user-table').on('click', '.open-EditbrandDialog ', function () {\n    var url = \"api/user/\";\n    var id = $(this).data('id').toString();\n    url = url.concat(id);\n    $(\"input[name='id']\").val(id);\n    $.get(url, function (data) {\n      $(\"input[name='name']\").val(data['name']);\n      $(\"input[name='last_name']\").val(data['last_name']);\n      $(\"input[name='email']\").val(data['email']);\n      $(\"input[name='role_id']\").val(data['role_id']);\n      up_user_id = data['id'];\n    });\n  });\n  $('#user-table').on('click', '.remove ', function () {\n    var url = \"api/user/\";\n    var id = $(this).data('id').toString();\n    url = url.concat(id);\n    var Jquery = $.Jquery;\n    $.confirm({\n      title: 'Eliminar usuarios',\n      content: 'Realmente quieres eliminar el usuario',\n      buttons: {\n        deleteUser: {\n          text: 'Si, eliminar',\n          action: function action() {\n            $.ajax({\n              url: url,\n              type: 'DELETE',\n              success: function success(response) {\n                $.alert({\n                  title: response.status,\n                  content: response.message\n                });\n                table.ajax.reload();\n              }\n            });\n          }\n        },\n        cancelar: function cancelar() {\n          // $.alert('action is canceled');\n        }\n      }\n    });\n  });\n  $('#user-table').on('click', '.desactivar ', function () {\n    var url = \"api/user/{id}/deactivate\";\n    var id = $(this).data('id').toString();\n    url = url.replace(/{id}/g, id);\n    var Jquery = $.Jquery;\n    $.confirm({\n      title: 'Desactivar usuario',\n      content: 'Realmente quieres desactivar el usuario',\n      buttons: {\n        deleteUser: {\n          text: 'Si, desactivar',\n          action: function action() {\n            $.ajax({\n              url: url,\n              type: 'PUT',\n              success: function success(response) {\n                $.alert({\n                  title: response.status,\n                  content: response.message\n                });\n                table.ajax.reload();\n              }\n            });\n          }\n        },\n        cancelar: function cancelar() {\n          // $.alert('action is canceled');\n        }\n      }\n    });\n  });\n  $('#user-table').on('click', '.activar ', function () {\n    var url = \"api/user/{id}/activate\";\n    var id = $(this).data('id').toString();\n    url = url.replace(/{id}/g, id);\n    var Jquery = $.Jquery;\n    $.confirm({\n      title: 'Activar usuario',\n      content: 'Realmente quieres activar el usuario',\n      buttons: {\n        deleteUser: {\n          text: 'Si, activar',\n          action: function action() {\n            $.ajax({\n              url: url,\n              type: 'PUT',\n              success: function success(response) {\n                $.alert({\n                  title: response.status,\n                  content: response.message\n                });\n                table.ajax.reload();\n              }\n            });\n          }\n        },\n        cancelar: function cancelar() {\n          // $.alert('action is canceled');\n        }\n      }\n    });\n  });\n  $(\"#user-table #select_all\").on(\"change\", function () {\n    if ($(this).is(':checked')) {\n      $(\"tbody input[type='checkbox']\").prop('checked', true);\n    } else {\n      $(\"tbody input[type='checkbox']\").prop('checked', false);\n    }\n    user_id = [];\n    verific_checks_users(0);\n  });\n  $('#user-table').on('click', \"tbody input[type='checkbox']\", function (e) {\n    if (!$(this).is(\":checked\")) {\n      //If the checkbox is checked\n      user_id = [];\n    }\n    verific_checks_users(1);\n  });\n  $('.bt-close-modal').on('click', function (e) {\n    $(\"input[name='name']\").val('');\n    $(\"input[name='last_name']\").val('');\n    $(\"input[name='email']\").val('');\n    $('div.securty_pass_c').hide();\n    $('div.securty_pass_u').hide();\n    $('form#new_user')[0].reset();\n    $('form#update_user')[0].reset();\n    $(\"form#new_user\").find(\"#btn-password\").removeClass('is-invalid');\n    $(\"form#new_user\").find(\"#btn-password\").attr('aria-invalid', false);\n    $(\"form#update_user\").find(\"#btn-password-up\").removeClass('is-invalid');\n    $(\"form#update_user\").find(\"#btn-password-up\").attr('aria-invalid', false);\n  });\n  $('.btn-close-modal').on('click', function (e) {\n    $(\"input[name='name']\").val('');\n    $(\"input[name='last_name']\").val('');\n    $(\"input[name='email']\").val('');\n    $('div.securty_pass_c').hide();\n    $('div.securty_pass_u').hide();\n    $('form#new_user')[0].reset();\n    $('form#update_user')[0].reset();\n    $(\"form#new_user\").find(\"#btn-password\").removeClass('is-invalid');\n    $(\"form#new_user\").find(\"#btn-password\").attr('aria-invalid', false);\n    $(\"form#update_user\").find(\"#btn-password-up\").removeClass('is-invalid');\n    $(\"form#update_user\").find(\"#btn-password-up\").attr('aria-invalid', false);\n  });\n  var verific_checks_users = function verific_checks_users(num) {\n    $(':checkbox.checkbox_user:checked').each(function (i) {\n      var user_data = $(this).closest('tr').data('user');\n      if (typeof user_data !== 'undefined') {\n        user_id[i] = user_data.id;\n      }\n    });\n  };\n  jQuery.validator.setDefaults({\n    errorPlacement: function errorPlacement(error, element) {\n      if (error.html() == 'Select Category...') error.html('This field is required.');\n      $(element).closest('div.form-group').find('.validation-msg').html(error.html());\n    },\n    highlight: function highlight(element) {\n      $(element).closest('div.form-group').removeClass('has-success').addClass('has-error');\n    },\n    unhighlight: function unhighlight(element, errorClass, validClass) {\n      $(element).closest('div.form-group').removeClass('has-error').addClass('has-success');\n      $(element).closest('div.form-group').find('.validation-msg').html('');\n    }\n  });\n  $('#show_pass').on(\"click\", function () {\n    if ($(this).hasClass('show_p')) {\n      $(this).removeClass('show_p');\n      $(this).addClass('hiden_p');\n      $(this).html('<i class=\"fa fa-eye-slash\" aria-hidden=\"true\"></i>');\n      $('#btn-password').attr('type', 'text');\n    } else {\n      $(this).removeClass('hiden_p');\n      $(this).addClass('show_p');\n      $(this).html('<i class=\"fa fa-eye\" aria-hidden=\"true\"></i>');\n      $('#btn-password').attr('type', 'password');\n    }\n  });\n  $('#show_passpu').on(\"click\", function () {\n    if ($(this).hasClass('show_pu')) {\n      $(this).removeClass('show_pu');\n      $(this).addClass('hiden_p');\n      $(this).html('<i class=\"fa fa-eye-slash\" aria-hidden=\"true\"></i>');\n      $('#btn-password-up').attr('type', 'text');\n    } else {\n      $(this).removeClass('hiden_p');\n      $(this).addClass('show_pu');\n      $(this).html('<i class=\"fa fa-eye\" aria-hidden=\"true\"></i>');\n      $('#btn-password-up').attr('type', 'password');\n    }\n  });\n  function formatErrorUsingClassesAndPopover(element, array_of_problems) {\n    var someHTML = '';\n    array_of_problems.forEach(function (e) {\n      someHTML += '<li>' + element + ': ' + e + '</li>';\n    });\n    // $('#'+element+'_error_section').html('<ul>'+someHTML+'</ul>');\n    // $('#'+element).addClass('is-invalid');\n\n    return '<ul>' + someHTML + '</ul><br>';\n  }\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/modules/user/index.js\n");

/***/ }),

/***/ 23:
/*!**************************************************!*\
  !*** multi ./resources/js/modules/user/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /usr/local/var/www/practica/resources/js/modules/user/index.js */"./resources/js/modules/user/index.js");


/***/ })

/******/ });